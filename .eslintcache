[{"D:\\Web\\CallUp system\\front-end\\src\\index.js":"1","D:\\Web\\CallUp system\\front-end\\src\\App.js":"2","D:\\Web\\CallUp system\\front-end\\src\\reportWebVitals.js":"3","D:\\Web\\CallUp system\\front-end\\src\\SignIn.js":"4","D:\\Web\\CallUp system\\front-end\\src\\Home.js":"5","D:\\Web\\CallUp system\\front-end\\src\\SignUp.js":"6","D:\\Web\\CallUp system\\front-end\\src\\ShowCard.js":"7","D:\\Web\\CallUp system\\front-end\\src\\Network.js":"8","D:\\Web\\CallUp system\\front-end\\src\\UserInfo.js":"9","D:\\Web\\CallUp system\\front-end\\src\\Manager.js":"10","D:\\Web\\CallUp system\\front-end\\src\\AddEvent.js":"11"},{"size":244,"mtime":1607532592490,"results":"12","hashOfConfig":"13"},{"size":1870,"mtime":1608314830307,"results":"14","hashOfConfig":"13"},{"size":362,"mtime":499162500000,"results":"15","hashOfConfig":"13"},{"size":2844,"mtime":1607955016799,"results":"16","hashOfConfig":"13"},{"size":6072,"mtime":1608343388059,"results":"17","hashOfConfig":"13"},{"size":4711,"mtime":1608192605563,"results":"18","hashOfConfig":"13"},{"size":22349,"mtime":1608326112993,"results":"19","hashOfConfig":"13"},{"size":1140,"mtime":1607532593818,"results":"20","hashOfConfig":"13"},{"size":5108,"mtime":1608222661150,"results":"21","hashOfConfig":"13"},{"size":8969,"mtime":1608343413631,"results":"22","hashOfConfig":"13"},{"size":9760,"mtime":1608325575311,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"379jtk",{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"26"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"26"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"26"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"26"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"26"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"26"},"D:\\Web\\CallUp system\\front-end\\src\\index.js",[],["54","55"],"D:\\Web\\CallUp system\\front-end\\src\\App.js",[],"D:\\Web\\CallUp system\\front-end\\src\\reportWebVitals.js",[],"D:\\Web\\CallUp system\\front-end\\src\\SignIn.js",["56"],"import React, { useState } from 'react';\r\nimport { Button, Input, Form, message } from 'antd';\r\nimport { useHistory  } from 'react-router-dom';\r\nimport { GET } from './Network';\r\nimport { UserOutlined, LockOutlined } from '@ant-design/icons';\r\nimport doge from \"./doge.png\"\r\nimport './SignIn&Up.css'\r\n\r\nexport const SignIn = (props) => {\r\n  let history = useHistory();\r\n  const [form] = Form.useForm();\r\n\r\n  const formSubmit = (values) => {\r\n    // 用户验证\r\n    GET(`/signin?name=${values.name}&password=${values.password}`, (json) => {\r\n      console.log(json);\r\n      props.userVars.userLogIn(json.userinfo[0]);\r\n      history.push(\"/\");\r\n    }, (errMsg) => {\r\n        message.error(errMsg);\r\n        form.resetFields();\r\n    })\r\n\r\n  };\r\n\r\n  if (!props.userVars.isLogIn) {\r\n    return (\r\n      <div\r\n        style={{\r\n          width: 350,\r\n          margin: 'auto',\r\n          textAlign: \"center\",\r\n        }}\r\n      >\r\n        <div style={{ textAlign: 'center', margin: \"40px 145px 20px 145px\" }} >\r\n          <img\r\n            style={{ height: '60px', }}\r\n            alt=\"logo\"\r\n            src={doge}\r\n          />\r\n        </div>\r\n        <h1 style={{ textAlign: 'center', }} >\r\n          召集令系统用户登录\r\n        </h1>\r\n        <div className=\"rcorners\" style={{ height: \"184px\" }} >\r\n          <Form form={form} name=\"basic\" initialValues={{ remember: true }} onFinish={(values)=>formSubmit(values)} >\r\n            <Form.Item name=\"name\" rules={[{ required: true, message: 'Please input your username!' }]} >\r\n              <Input\r\n                prefix={<UserOutlined className=\"site-form-item-icon\" />} placeholder=\"Username\"\r\n                style={{ width: '100%', borderRadius: '6px'}}\r\n              />  \r\n            </Form.Item>\r\n            <Form.Item name=\"password\" rules={[{ required: true, message: 'Please input your password!' }]} >\r\n              <Input\r\n                prefix={<LockOutlined className=\"site-form-item-icon\" />}\r\n                type=\"password\"\r\n                placeholder=\"Password\"\r\n                style={{ width: '100%', borderRadius: '6px'}}\r\n              />\r\n            </Form.Item>\r\n            <Form.Item >\r\n              <Button type=\"primary\" htmlType=\"submit\"\r\n                style={{ width: '100%', borderRadius: '6px', backgroundColor: '#F1C40F', border: 'none', fontSize: '16px', }}\r\n              >\r\n                Sign in\r\n              </Button>\r\n            </Form.Item>\r\n          </Form>\r\n          <Button type=\"link\" htmlType=\"button\"\r\n            style={{ width: '100%', borderRadius: '6px', border: 'none', fontSize: '16px', }}\r\n            onClick={()=>{history.push(\"/signup\")}}\r\n          >\r\n            Create a new user!\r\n          </Button>\r\n        </div>\r\n      </div>\r\n    );\r\n  } else {\r\n    history.push(\"/\");\r\n    return (null);\r\n  };\r\n};\r\n\r\n","D:\\Web\\CallUp system\\front-end\\src\\Home.js",["57","58","59","60","61","62"],"import React, { useEffect, useState } from 'react';\nimport { useHistory } from \"react-router-dom\";\nimport { Layout, Menu, Button, Affix, Avatar, Select, Input } from 'antd';\n\nimport { ShowCard } from './ShowCard.js';\nimport { UserInfo } from './UserInfo.js';\nimport { Manager } from './Manager.js';\nimport { AddEvent } from './AddEvent.js';\nimport Form from 'antd/lib/form/Form';\n\nimport './Home.less';\n\nimport avatar from \"./avatar.png\";\nimport avatar1 from \"./avatar1.png\";\nimport avatar2 from \"./avatar2.png\";\nimport avatar3 from \"./avatar3.png\";\nimport avatar4 from \"./avatar4.png\";\nimport avatar5 from \"./avatar5.png\";\n\n\n\n\nexport const Home = (props) => {\n  let history = useHistory();\n  const [pageHeight, setPageHeight] = useState(window.document.body.clientHeight);\n  const [pageWidth, setPageWidth] = useState(window.document.body.innerWidth);\n  const [currentPage, setCurrentPage] = useState(\"1\");\n  const [specificType, setSpecificType] = useState(0);\n  const [searchKey, setSearchKey] = useState(\"\");\n  const { Search } = Input;\n  const avatarList = [avatar1, avatar2, avatar3, avatar4, avatar5];\n\n  useEffect(() => {\n    setPageHeight(window.document.body.clientHeight);\n    setPageWidth(window.document.body.innerWidth);\n  });\n\n  if (props.userVars.isLogIn) {\n    return (\n      <Layout className='layout'\n        style={{\n          height: pageHeight,\n          width: pageWidth\n        }}\n      >\n        <Affix offsetTop={0} >\n          <Layout.Sider width={350}\n            style={{\n              borderRight: 0,\n              height: pageHeight\n            }}\n          >\n            <Layout className='sider-back'\n              style={{\n                height: pageHeight,\n                backgroundColor: '#21618C'\n              }}\n            >\n              <Layout.Content>\n                <Layout className='headpic-back'\n                  style={{\n                    height: 320,\n                    backgroundColor: 'transparent'\n                  }}\n                >\n                  <Avatar\n                    size={210}\n                    shape='circle'\n                    src={ props.userVars.userType == 2 ? avatar : avatarList[props.userVars.id % 5] }\n                    alt=\"headpic\"\n                    style={{\n                      margin: '70px 70px 40px 70px',\n                    }} />\n                </Layout>\n                \n                <div style={{ height: 200 }} >\n                  <UserInfo userVars={props.userVars} />\n                </div>\n\n                <div style={{ height: 50, textAlign: 'center' }} >\n                  <Button type='link' shape=\"round\" onClick={() => { props.userVars.setIsLogIn(false); }} >\n                    退出登录\n                  </Button>\n                </div>\n\n                <Menu\n                  theme='light'\n                  mode='inline'\n                  defaultSelectedKeys={[currentPage]}\n                  value={currentPage}\n                  onClick={(e) => { setCurrentPage(e.key); console.log(currentPage); }}\n                >\n                  <Menu.Item className='menu-text' key=\"1\" >召集令大厅</Menu.Item>\n                  {props.userVars.userType == 1 ?\n                    <Menu.Item className='menu-text' key=\"2\" >我的发布</Menu.Item> : <></>\n                  }\n                  {props.userVars.userType == 1 ?\n                    <Menu.Item className='menu-text' key=\"3\" >我的申请</Menu.Item> : <></>\n                  }\n                  {props.userVars.userType == 2 ?\n                    <Menu.Item className='menu-text' key=\"4\" >管理<Manager showtype={currentPage} setCurrentPage={setCurrentPage}/></Menu.Item> : <></>\n                  }\n                </Menu>\n              </Layout.Content>\n                \n              <Layout.Footer style={{ backgroundColor: 'transparent' }} >\n                <p style={{ marginTop: 60, textAlign: \"center\", }} >\n                  ©2020 Binbin&Xuanxuan. <br /> All rights reserved.\n                </p>\n              </Layout.Footer>\n            </Layout>\n          </Layout.Sider>\n        </Affix>\n\n        <Layout.Content className='content-back' width={pageWidth - 350} >\n          <Layout >\n            <Affix offsetTop={0} >\n              <Layout.Header\n                className='header-back'\n                style={{\n                  padding: 0,\n                  backgroundColor: '#154360'\n                }}\n              >\n                <Search\n                  className=\"searchBox\"\n                  placeholder='Search something'\n                  allowClear\n                  onSearch={(value) => { setSearchKey(value); }}\n                  background='transparent'\n                  style={{\n                    width: 400,\n                    margin: '16px 26px',\n                    background: 'transparent',\n                  }}\n                />\n                <Select defaultValue='0' style={{ width: 120 }} onChange={(value) => { setSpecificType(value); }} >\n                  <Select.Option value='0'>全部类别</Select.Option>\n                  <Select.Option value='1'>技术交流</Select.Option>\n                  <Select.Option value='2'>学业探讨</Select.Option>\n                  <Select.Option value='3'>社会实践</Select.Option>\n                  <Select.Option value='4'>公益志愿</Select.Option>\n                  <Select.Option value='5'>娱乐游玩</Select.Option>\n                </Select>\n                <AddEvent userVars={props.userVars} />\n              </Layout.Header>\n            </Affix>\n\n            <Layout.Content className='content-back' >\n              <div className=\"card-area\"\n                style={{\n                  marginTop: 50,\n                  marginLeft: 70\n                }} >\n                <ShowCard userVars={props.userVars} showtype={currentPage} specificType={specificType} searchKey={searchKey} />\n              </div>\n            </Layout.Content>\n          </Layout>\n        </Layout.Content>\n      </Layout>\n    );\n  }\n  else {\n    history.push(\"/signin\");\n    return (null);\n  };\n};\n","D:\\Web\\CallUp system\\front-end\\src\\SignUp.js",["63"],"import React, { useState } from 'react';\r\nimport { Button, Input, Form, message, Radio } from 'antd';\r\nimport { useHistory  } from 'react-router-dom';\r\nimport { GET, POST } from './Network';\r\nimport { UserOutlined, LockOutlined, PhoneOutlined, HomeOutlined, IdcardOutlined, EditOutlined } from '@ant-design/icons';\r\nimport doge from \"./doge.png\"\r\nimport './SignIn&Up.css'\r\n\r\nexport const SignUp = (props) => {\r\n  let history = useHistory();\r\n  const [idtype, setIDType] = useState(1);\r\n  const [form] = Form.useForm();\r\n\r\n  const formSubmit = (values) => {\r\n    console.log(values);\r\n    // 用户注册\r\n    const payload = {\r\n      'name': values.name,\r\n      'password': values.password,\r\n      'phone_num': values.phonenum,\r\n      'description': values.description,\r\n      'identity_type': idtype,\r\n      'identity_num': values.identitynum,\r\n      'city': values.city\r\n    };\r\n    console.log(payload);\r\n    POST('/signup', payload, (json) => {\r\n      message.success(\"Signup successfully, signin now!\")\r\n      history.push(\"/signin\");\r\n    }, (errMsg) => {\r\n      message.error(errMsg);\r\n      form.resetFields();\r\n    });\r\n  };\r\n  \r\n  if (!props.userVars.isLogIn) {\r\n    return (\r\n      <div\r\n        style={{\r\n          width: 350,\r\n          margin: 'auto',\r\n          textAlign: \"center\",\r\n        }}\r\n      >\r\n        <div style={{ textAlign: 'center', margin: \"40px 145px 20px 145px\" }} >\r\n          <img\r\n            style={{ height: '60px', }}\r\n            alt=\"logo\"\r\n            src={doge}\r\n          />\r\n        </div>\r\n        <h1 style={{ textAlign: 'center', }} >\r\n          召集令系统用户注册\r\n        </h1>\r\n        <div className=\"rcorners\" style={{ height: \"464px\" }}>\r\n          <Form form={form} name=\"basic\" initialValues={{ remember: true }} onFinish={(values)=>formSubmit(values)} >\r\n            <Form.Item name=\"name\" rules={[{ required: true, message: 'Please input your username!' }]} >\r\n              <Input\r\n                prefix={<UserOutlined className=\"site-form-item-icon\" />} placeholder=\"Username\"\r\n                style={{ width: '100%', borderRadius: '6px'}}\r\n              />\r\n            </Form.Item>\r\n            <Form.Item name=\"password\" rules={[{ required: true, message: 'Please input your password!' }]} >\r\n              <Input\r\n                prefix={<LockOutlined className=\"site-form-item-icon\" />}\r\n                type=\"password\"\r\n                placeholder=\"Password\"\r\n                style={{ width: '100%', borderRadius: '6px'}}\r\n              />\r\n            </Form.Item>\r\n            <Form.Item name=\"phonenum\" rules={[{ required: true, message: 'Please input your phone number!' }]} >\r\n              <Input\r\n                prefix={<PhoneOutlined className=\"site-form-item-icon\" />} placeholder=\"Phone number\"\r\n                style={{ width: '100%', borderRadius: '6px'}}\r\n              />\r\n            </Form.Item>\r\n            <Form.Item name=\"identitytype\" rules={[{ required: true, message: 'Please select your identity type!' }]} >\r\n              <Radio.Group onChange={(e)=>{setIDType(e.target.value)}} value={idtype} >\r\n                <Radio value={1} >身份证</Radio>\r\n                <Radio value={2} >护照</Radio>\r\n              </Radio.Group>\r\n            </Form.Item>\r\n            <Form.Item name=\"identitynum\" rules={[{ required: true, message: 'Please input your identity number!' }]} >\r\n              <Input\r\n                prefix={<IdcardOutlined className=\"site-form-item-icon\" />} placeholder=\"Identity number\"\r\n                style={{ width: '100%', borderRadius: '6px'}}\r\n              />\r\n            </Form.Item>\r\n            <Form.Item name=\"city\" rules={[{ required: true, message: 'Please input your city!' }]} >\r\n              <Input\r\n                prefix={<HomeOutlined className=\"site-form-item-icon\" />} placeholder=\"City\"\r\n                style={{ width: '100%', borderRadius: '6px'}}\r\n              />\r\n            </Form.Item>\r\n            <Form.Item name=\"description\" rules={[{ required: false, message: 'Introduce yourself!' }]} >\r\n              <Input\r\n                prefix={<EditOutlined className=\"site-form-item-icon\" />} placeholder=\"Introduce yourself\"\r\n                style={{ width: '100%', borderRadius: '6px'}}\r\n              />\r\n            </Form.Item>\r\n            <Form.Item >\r\n              <Button type=\"primary\" htmlType=\"submit\"\r\n                style={{ width: '100%', borderRadius: '6px', backgroundColor: '#F1C40F', border: 'none', fontSize: '16px', }}\r\n              >\r\n                Sign up\r\n              </Button>\r\n            </Form.Item>\r\n          </Form>\r\n        </div>\r\n      </div>\r\n    );\r\n  } else {\r\n    history.push(\"/\");\r\n    return (null);\r\n  };\r\n};\r\n","D:\\Web\\CallUp system\\front-end\\src\\ShowCard.js",["64","65","66","67","68","69","70","71","72","73"],"import React, { useState, useEffect } from 'react';\nimport { Space, Card, Modal, Descriptions, Badge, Avatar, Spin, Popover, message, Layout, Button, Typography, Row, Col, Input, List, Upload } from 'antd';\nimport { UserOutlined, CheckOutlined, CloseOutlined, UploadOutlined } from '@ant-design/icons';\nimport { GET, POST } from './Network';\n\nimport poster1 from \"./1.jpg\";\nimport poster2 from \"./2.jpg\";\nimport poster3 from \"./3.jpg\";\nimport poster4 from \"./4.jpg\";\nimport poster5 from \"./5.jpg\";\nimport poster6 from \"./6.jpg\";\nimport poster7 from \"./7.jpg\";\nimport poster8 from \"./8.jpg\";\nimport poster9 from \"./9.jpg\";\nimport poster10 from \"./10.jpg\";\nimport { Select, Form, DatePicker, InputNumber } from 'antd'\n\nimport moment from 'moment';\n\n\nDate.prototype.format = function(fmt) { \n  var o = { \n     \"M+\" : this.getMonth()+1,                 //月份 \n     \"d+\" : this.getDate(),                    //日 \n     \"h+\" : this.getHours(),                   //小时 \n     \"m+\" : this.getMinutes(),                 //分 \n     \"s+\" : this.getSeconds(),                 //秒 \n     \"q+\" : Math.floor((this.getMonth()+3)/3), //季度 \n     \"S\"  : this.getMilliseconds()             //毫秒 \n }; \n if(/(y+)/.test(fmt)) {\n         fmt=fmt.replace(RegExp.$1, (this.getFullYear()+\"\").substr(4 - RegExp.$1.length)); \n }\n  for(var k in o) {\n     if(new RegExp(\"(\"+ k +\")\").test(fmt)){\n          fmt = fmt.replace(RegExp.$1, (RegExp.$1.length==1) ? (o[k]) : ((\"00\"+ o[k]).substr((\"\"+ o[k]).length)));\n      }\n  }\n return fmt; \n}\n\n\nexport const ShowCard = (props) => {\n  const [callupList, setCallupList] = useState([]);\n  const [detail, setDetail] = useState({ id: '' });\n  const [requests, setRequests] = useState([]);\n  const [myReq, setMyReq] = useState({ user_id: '' });\n  const [newDescription, setNewDescription] = useState(\"\");\n  const [applyVisible1, setApplyVisible1] = useState(false);\n  const [applyVisible2, setApplyVisible2] = useState(false);\n  const [applyVisible3, setApplyVisible3] = useState(false);\n  const [changeCallUp, setChangeCallUp] = useState(false);\n  const { Paragraph } = Typography;\n  const { TextArea } = Input;\n  const calluplist = [\"技术交流\", \"学术探讨\", \"社会实践\", \"公益志愿\", \"娱乐游玩\"];\n  const reqstate = [\n    { color: \"#F4D03F\", text: \"待处理\" },\n    { color: \"#58D68D\", text: \"批准\" },\n    { color: \"#EC7063\", text: \"拒绝\" },\n    { color: \"#99A3A4\", text: \"已取消\" }\n  ];\n  const callupstate = [\n    { color: \"#58D68D\", text: \"已完成\" },\n    { color: \"#F4D03F\", text: \"待响应\" },\n    { color: \"#99A3A4\", text: \"已取消\" },\n    { color: \"#EC7063\", text: \"到期未达成\" }\n  ];\n  const posterList = [poster1, poster2, poster3, poster4, poster5, poster6, poster7, poster8, poster9, poster10];\n\n  const getCallup = () => {\n    const showtype = props.showtype;\n    var count = 0;\n    var participate = false;\n    GET('/calluplist',\n      (json) => {\n        const tempCallupList = [];\n        json.callupinfo.forEach((callup) => {\n          if ((props.specificType == 0 || props.specificType == callup.type) && callup.name.search(props.searchKey) != -1)\n            tempCallupList.push(callup);\n        });\n        const newCallupList = [];\n        tempCallupList.forEach((callup, index) => {\n          if (showtype == 2) {\n            if (callup.owner === props.userVars.user) {\n              if (count % 4 === 0)\n                newCallupList.push([]);\n              newCallupList[newCallupList.length - 1].push(callup);\n              count = count + 1;\n            }\n          } else if (showtype == 3) {\n            participate = false;\n            for (let i = 0; i < callup.requests.length; i++) {\n              if (callup.requests[i].user_name === props.userVars.user) {\n                participate = true;\n              }\n            }\n            if (participate) {\n              if (count % 4 === 0)\n                newCallupList.push([]);\n              newCallupList[newCallupList.length - 1].push(callup);\n              count = count + 1;\n            }\n          } else {\n            if (index % 4 === 0)\n              newCallupList.push([]);\n            newCallupList[newCallupList.length - 1].push(callup);\n          }\n        })\n        setCallupList(newCallupList);\n        console.log(callupList);\n      },\n      (errMsg) => message.error(errMsg)\n    );\n  };\n\n  useEffect(getCallup, [props.showtype, props.specificType, props.searchKey]);\n\n  const showDetail = (callup) => {\n    setMyReq({ user_id: '' });\n    var accept = 0;\n    for (let i = 0; i < callup.requests.length; i++) {\n      if (callup.requests[i].user_name === props.userVars.user) {\n        setMyReq(callup.requests[i]);\n      }\n      if (callup.requests[i].state === 2) {\n        accept = accept + 1;\n      }\n    }\n    setRequests(callup.requests);\n    setDetail({ ...callup, acceptReq: accept });\n  };\n\n\n  const callupCards = callupList.map((callupGroup, group_idx) => (\n    <Space key={group_idx} size={50} >\n      {\n        callupGroup.map((callup) => (\n          <Card\n            key={callup.id}\n            hoverable\n            onClick={(e) => {\n              showDetail(callup);\n              // e.stopPropagation();\n            }}\n            style={{ width: 320 }}\n            cover={ <img src={posterList[callup.id % 10]} alt='poster' /> }\n          >\n            <Card.Meta\n              title={ <Paragraph >{callup.name}</Paragraph> }\n              description={ <Paragraph ellipsis={{ rows: 1 }}>{callup.description}</Paragraph> }\n            />\n          </Card>\n        ))\n      }\n    </Space>\n  ));\n\n\n\n\n  const [form] = Form.useForm();\n\n  const showChangeCallUp = () => {\n    form.setFieldsValue({\n      \"title\": detail.name,\n      \"type\": String(detail.type),\n      \"endtime\": moment(detail.end_time),\n      \"population\": detail.member,\n      \"description\": detail.description,\n    })\n    setChangeCallUp(true);\n  };\n\n  const changeSubmit = (values) => {\n    console.log(values);\n    const payload = {\n      'id': `${detail.id}`, \n      'title': values.title,\n      'type': values.type,\n      'endtime': values.endtime.format('YYYY-MM-DD'),\n      'description': values.description,\n      'population': `${values.population}`,\n      'img': 'no image',\n    };\n    console.log(payload);\n\n    POST('/changecallup', payload, (json) => {\n      message.success(\"Call up changed successfully!\")\n    }, (errMsg) => {\n      message.error(errMsg);\n      //form.resetFields();\n    });\n    handleOk();\n  };\n\n  const handleCancel = () => {\n    setChangeCallUp(false);\n    setDetail({ id: '' });\n  };\n  const handleOk = () => {\n    setChangeCallUp(false);\n    setDetail({ id: '' });\n  };\n\n  var d = new Date().format('yyyy-MM-dd'); \n  function disabledDate(current) {\n    return current.format('YYYY-MM-DD') < d;\n  }\n\n\n  return (\n    <>\n      <Space className='main-col' align='center' direction='vertical' size={50} >\n        {callupCards}\n      </Space>\n      <Modal\n        centered\n        width={1000}\n        visible={detail.id}\n        destroyOnClose={true}\n        onCancel={() => setDetail({ id: '' })}\n        title={\n          <p style={{ fontSize: 30 }} >\n            {detail.name}\n          </p>\n        }\n        footer={[\n          <Button key=\"back\" type=\"primary\" shape=\"round\" onClick={() => setDetail({ id: '' })}>\n            Return\n          </Button>\n        ]}\n      >\n        <Spin spinning={!detail.id} >\n          <Descriptions bordered >\n            <Descriptions.Item label=\"召集令描述\" span={3} >\n              {detail.description}\n            </Descriptions.Item>\n            <Descriptions.Item label=\"召集令类型\" >\n              {calluplist[detail.type - 1]}\n            </Descriptions.Item>\n            <Descriptions.Item label=\"发布者\" >\n              {detail.owner}\n            </Descriptions.Item>\n            <Descriptions.Item label=\"所在城市\" >\n              {detail.city}\n            </Descriptions.Item>\n            <Descriptions.Item label=\"结束时间\" >\n              {detail.end_time}\n            </Descriptions.Item>\n            <Descriptions.Item label=\"创建时间\" >\n              {detail.ctime}\n            </Descriptions.Item>\n            <Descriptions.Item label=\"修改时间\" >\n              {detail.mtime}\n            </Descriptions.Item>\n            <Descriptions.Item label=\"招募人数\" >\n              {detail.member}\n            </Descriptions.Item>\n            <Descriptions.Item label=\"申请人数\" >\n              {requests.length}\n            </Descriptions.Item>\n            <Descriptions.Item label=\"已批准人数\" >\n              {detail.acceptReq}\n            </Descriptions.Item>\n            <Descriptions.Item label=\"状态\" >\n              {\n                !detail.id ? <></> : <Badge color={callupstate[detail.state - 1].color} text={callupstate[detail.state - 1].text} />\n              }\n            </Descriptions.Item>\n            {detail.owner === props.userVars.user ?\n              <>\n                <Descriptions.Item label=\"修改\" >\n                  <Button type='primary' shape='round' onClick={showChangeCallUp} style={{ marginLeft: 30 }}>\n                    修改召集令\n                  </Button>\n                </Descriptions.Item>\n                <Descriptions.Item label=\"管理申请\" >\n                  {requests.length > 0 ?\n                    <Button type=\"primary\" shape=\"round\" onClick={()=>setApplyVisible1(true)} disabled={detail.state !== 2} >\n                      管理用户申请\n                    </Button> : \"还没有用户申请!\"\n                  }\n                </Descriptions.Item>\n              </> :\n              <Descriptions.Item label=\"我的申请\" span={2} >\n                {myReq.user_id ?\n                  <Row align=\"middle\">\n                    <Col span={5} >\n                      <Badge color={reqstate[myReq.state - 1].color} text={reqstate[myReq.state - 1].text} />\n                    </Col>\n                    <Col offset={1} span={5} >\n                      <Button type=\"primary\" shape=\"round\" onClick={() => setApplyVisible2(true)}\n                        disabled={detail.state !== 2 || myReq.state !== 1}>\n                        修改申请\n                      </Button>\n                    </Col>\n                  </Row> :\n                  <Button type=\"primary\" shape=\"round\" onClick={()=>setApplyVisible3(true)} disabled={detail.state !== 2} >\n                    申请\n                  </Button>\n                }\n              </Descriptions.Item>\n            }\n          </Descriptions>\n        </Spin>\n      </Modal>\n      <Modal\n        centered\n        width={600}\n        visible={applyVisible3}\n        destroyOnClose={true}\n        onCancel={() => {\n          setApplyVisible3(false);\n          setDetail({ id: '' });\n          setNewDescription(\"\");\n          getCallup();\n        }}\n        title={\n          <p style={{ fontSize: 30 }} >\n            {\"召集令申请\"}\n          </p>\n        }\n        footer={[\n          <Button key=\"back\" type=\"primary\" shape=\"round\" onClick={() => {\n            setApplyVisible3(false);\n            setDetail({ id: '' });\n            setNewDescription(\"\");\n            getCallup();\n          }}>\n            Return\n          </Button>\n        ]}\n      >\n        <Row align=\"middle\" gutter={[16, 24]} >\n          <Col offset={2} span={4} >\n            <p style={{ margin:0 }} >召集令</p>\n          </Col>\n          <Col offset={1} span={6} >\n            <p style={{ margin:0 }} >{ detail.name }</p>\n          </Col>\n        </Row>\n        <Row align=\"middle\" gutter={[16, 24]} >\n          <Col offset={2} span={4} >\n            <p style={{ margin:0 }} >申请理由</p>\n          </Col>\n          <Col offset={1} span={8} >\n            <TextArea onChange={(e) => {\n              setNewDescription(e.target.value);\n            }} />\n          </Col>\n        </Row>\n        <Row align=\"middle\" gutter={[16, 24]} >\n          <Col offset={7} span={4} >\n            <Button type=\"primary\" shape=\"round\" onClick={() => {\n              const payload = {\n                id: detail.id,\n                user: props.userVars.user,\n                description: newDescription\n              };\n              console.log(payload);\n              POST('/addreq', payload, (json) => {\n                message.success(\"用户创建申请成功\");\n              }, (errMsg) => {\n                message.error(errMsg);\n              });\n              setNewDescription(\"\");\n            }}>\n              申请\n            </Button>\n          </Col>\n        </Row>\n      </Modal>\n      <Modal\n        centered\n        width={600}\n        visible={applyVisible2}\n        destroyOnClose={true}\n        onCancel={() => {\n          setApplyVisible2(false);\n          setDetail({ id: '' });\n          setNewDescription(\"\");\n          getCallup();\n        }}\n        title={\n          <p style={{ fontSize: 30 }} >\n            {\"修改我的申请\"}\n          </p>\n        }\n        footer={[\n          <Button key=\"back\" type=\"primary\" shape=\"round\" onClick={() => {\n            setApplyVisible2(false);\n            setDetail({ id: '' });\n            setNewDescription(\"\");\n            getCallup();\n          }}>\n            Return\n          </Button>\n        ]}\n      >\n        <Row align=\"middle\" gutter={[16, 24]} >\n          <Col offset={2} span={4} >\n            <p style={{ margin:0 }} >召集令</p>\n          </Col>\n          <Col offset={1} span={6} >\n            <p style={{ margin:0 }} >{ detail.name }</p>\n          </Col>\n        </Row>\n        <Row align=\"middle\" gutter={[16, 24]} >\n          <Col offset={2} span={4} >\n            <p style={{ margin:0 }} >申请理由</p>\n          </Col>\n          <Col offset={1} span={8} >\n            <TextArea defaultValue={myReq.description} onChange={(e) => {\n              setNewDescription(e.target.value);\n            }} />\n          </Col>\n        </Row>\n        <Row align=\"middle\" gutter={[16, 24]} >\n          <Col offset={7} span={4} >\n            <Button type=\"primary\" shape=\"round\" onClick={() => {\n              const payload = {\n                id: myReq.id,\n                description: newDescription\n              };\n              POST('/changereq', payload, (json) => {\n                message.success(\"用户修改申请成功\");\n              }, (errMsg) => {\n                message.error(errMsg);\n              });\n              setNewDescription(\"\");\n            }}>\n              修改申请\n            </Button>\n          </Col>\n        </Row>\n      </Modal>\n      <Modal\n        centered\n        width={500}\n        visible={applyVisible1}\n        destroyOnClose={true}\n        onCancel={() => {\n          setApplyVisible1(false);\n          setDetail({ id: '' });\n          getCallup();\n        }}\n        title={\n          <p style={{ fontSize: 30 }} >\n            {\"管理用户申请\"}\n          </p>\n        }\n        footer={[\n          <Button key=\"back\" type=\"primary\" shape=\"round\" onClick={() => {\n            setApplyVisible1(false);\n            setDetail({ id: '' });\n            getCallup();\n          }}>\n            Return\n          </Button>\n        ]}\n      >\n        <List\n          itemLayout=\"horizontal\"\n          pagination={{ onChange: page => { console.log(page); }, pageSize: 4, }}\n          dataSource={requests}\n          renderItem={item => (\n            <List.Item\n              key={item.name}\n              actions={[\n                <Button type=\"primary\" shape=\"circle\" onClick={() => {\n                  const payload = {\n                    id: item.id,\n                    state: 2\n                  }\n                  POST('/managereq', payload, (json) => {\n                    message.success(\"接受用户申请\");\n                  }, (errMsg) => {\n                    message.error(errMsg);\n                  })\n                }} disabled={detail.acceptReq >= detail.member || item.state === 2 || item.state === 4} >\n                  <CheckOutlined />\n                </Button> ,\n                <Button shape=\"circle\" onClick={() => {\n                  const payload = {\n                    id: item.id,\n                    state: 3\n                  };\n                  POST('/managereq', payload, (json) => {\n                    message.success(\"拒绝用户申请\");\n                  }, (errMsg) => {\n                    message.error(errMsg);\n                  });\n                }} disabled={item.state === 3 || item.state === 4} >\n                  <CloseOutlined />\n                </Button>\n              ]}\n            >\n              <List.Item.Meta\n                avatar={<UserOutlined style={{ fontSize: 20 }} />}\n                title={\n                  <p style={{ fontSize: 16, fontWeight: 'bold', margin: 0, padding: 0 }} >\n                    {item.user_name}\n                  </p>\n                }\n                description={\n                  <p style={{ fontSize: 14, margin: 0, padding: 0 }} >\n                    {item.description}\n                  </p>\n                }\n                style={{ margin: 0, padding: 0, }}\n              />\n            </List.Item>\n          )}\n        />\n      </Modal>\n\n\n\n      \n\n      \n\n      \n      <Modal\n        title={<div style={{fontSize: 20}}>修改召集令</div>}\n        centered\n        width={910}\n        visible={changeCallUp}\n        onOk={handleOk}\n        onCancel={handleCancel}\n        destroyOnClose={true}\n        footer={null}\n      >\n        <Form  name=\"changeCallUp\" form={form} initialValues={{ remember: true }} onFinish={(values)=>changeSubmit(values)} preserve={false}>\n\n          <Layout style={{backgroundColor: 'white', height: 300, marginTop: 15, marginLeft: 15 }} >\n            <Layout style={{  backgroundColor: 'transparent',}} >\n              <Layout.Sider width={550} style={{ backgroundColor: 'transparent' }} >\n                <Layout width={450} style={{ backgroundColor: 'transparent' }} >\n                  <Layout height={300} style={{ backgroundColor: 'transparent' }} >\n                    <Layout.Sider width={380} style={{ backgroundColor: 'transparent', }} >\n                      <Form.Item name=\"title\" rules={[{ required: true, message: 'Please input the title!' }]} >\n                        <Input\n                          placeholder=\"Title\"\n                          autoComplete=\"off\"\n                          style={{ width: 330, }}\n                          // defaultValue={detail.name}\n                        />\n                      </Form.Item>\n                    </Layout.Sider>\n\n                    <Layout.Content>\n                      <Form.Item name=\"type\" rules={[{ required: true, message: 'Please choose the type!' }]}>\n                        <Select style={{ width: 120, }}\n                          // defaultValue={String(detail.type)}\n                        >\n                          <Select.Option value='1'>技术交流</Select.Option>\n                          <Select.Option value='2'>学业探讨</Select.Option>\n                          <Select.Option value='3'>社会实践</Select.Option>\n                          <Select.Option value='4'>公益志愿</Select.Option>\n                          <Select.Option value='5'>娱乐游玩</Select.Option>\n                        </Select>\n                      </Form.Item>\n                    </Layout.Content>\n                  </Layout>\n\n                  <Layout height={300} style={{ backgroundColor: 'transparent', }} >\n                    <Layout.Sider width={250} style={{ backgroundColor: 'transparent', }} >\n                      <Form.Item name=\"endtime\" rules={[{ required: true, message: 'Please input the end date!' }]} >\n                        <DatePicker\n                          placeholder='Finish date'\n                          disabledDate={disabledDate}\n                          inputReadOnly\n                          style={{ width: 200 }}\n                          // defaultValue={moment(detail.end_time)}\n                        />\n                      </Form.Item>\n                    </Layout.Sider>\n\n                    <Layout.Content>\n                      <Form.Item name=\"population\" rules={[{ required: true, message: 'Please input the person number!' }]} >\n                        <InputNumber\n                          min={1}\n                          placeholder='Population'\n                          style={{ width: 120 }}\n                          // defaultValue={detail.member}\n                        />\n                      </Form.Item>\n                    </Layout.Content>\n                  </Layout>\n                  \n                  <Form.Item name=\"description\" rules={[{ required: true, message: 'Please input the description!' }]} >\n                    <Input.TextArea\n                      placeholder=\"Discription\"\n                      showCount\n                      maxLength={140}\n                      rows={4}\n                      autoComplete=\"off\"\n                      // defaultValue={detail.description}\n                      style={{ width: 500, }}\n                    />\n                  </Form.Item>\n                </Layout>\n              </Layout.Sider>\n\n              <Layout.Content>\n                <Form.Item name=\"image\" rules={[{ required: false, message: 'Please upload the event picture!' }]} >\n                  {/* <Upload {...pppp}> */}\n                  <Upload>\n                    <Button icon={<UploadOutlined />}\n                      style={{\n                        width: 240,\n                        height: 180\n                      }}\n                    >upload</Button>\n                  </Upload>\n                </Form.Item>\n              </Layout.Content>\n            </Layout>\n            \n            <Layout style={{backgroundColor: 'transparent'}}>\n              <Row gutter={16} justify=\"end\" style={{marginRight: 10}}>\n                <Col>\n                  <Button key=\"back\" onClick={handleCancel}>\n                    Cancel\n                  </Button>\n                </Col>\n\n                <Col>\n                  <Form.Item>\n                    <Button key=\"submit\" type=\"primary\" htmlType=\"submit\">\n                      Submit\n                    </Button>\n                  </Form.Item>\n                </Col>\n              </Row>\n            </Layout>\n          </Layout>\n        </Form>\n      </Modal>\n    </>  \n  )\n}\n\n","D:\\Web\\CallUp system\\front-end\\src\\Network.js",[],["74","75"],"D:\\Web\\CallUp system\\front-end\\src\\UserInfo.js",[],"D:\\Web\\CallUp system\\front-end\\src\\Manager.js",["76","77","78"],"import React, { useState, useEffect } from 'react';\r\nimport { Menu, Modal, Button, List, Row, Col, message, Statistic, Select } from 'antd';\r\nimport { PieChartOutlined, UserOutlined, PhoneOutlined, IdcardOutlined, HomeOutlined, TeamOutlined, TrophyOutlined } from '@ant-design/icons';\r\nimport { Pie } from '@ant-design/charts';\r\nimport { GET } from './Network';\r\n\r\n\r\nexport const Manager = (props) => {\r\n  const [visible, setVisible] = useState(false);\r\n  const [current, setCurrent] = useState(\"1\");\r\n\r\n  const showModal = () => {\r\n    if (props.showtype == 4)\r\n      setVisible(true);\r\n    else\r\n      setVisible(false);\r\n  };\r\n\r\n  useEffect(showModal, [props.showtype]);\r\n\r\n  const handleOk = () => {\r\n    setVisible(false);\r\n    props.setCurrentPage(\"1\");\r\n    console.log(props.showtype);\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    setVisible(false);\r\n    props.setCurrentPage(\"1\");\r\n  };\r\n\r\n  const handleClick = e => {\r\n    console.log('click ', e);\r\n    setCurrent(e.key);\r\n  };\r\n\r\n  const pages = {\r\n    '1': {\r\n      id: '1',\r\n      content: (\r\n        <CallUpInfo />\r\n      ),\r\n    },\r\n    '2': {\r\n      id: '2',\r\n      content: (\r\n        <UserList />\r\n      ),\r\n    },\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Modal\r\n        visible={visible}\r\n        destroyOnClose={true}\r\n        title={\r\n          <Menu onClick={handleClick} selectedKeys={[current]} mode=\"horizontal\">\r\n            <Menu.Item key=\"1\" icon={<PieChartOutlined />}>\r\n              召集令统计信息\r\n            </Menu.Item>\r\n            <Menu.Item key=\"2\" icon={<UserOutlined />}>\r\n              用户列表\r\n            </Menu.Item>\r\n          </Menu>\r\n        }\r\n        onOk={handleOk}\r\n        onCancel={handleCancel}\r\n        closable={true}\r\n        width={'1000px'}\r\n        footer={\r\n          <Button key=\"back\" onClick={handleCancel}>\r\n            取消\r\n          </Button>\r\n        }\r\n      >\r\n        {pages[current].content}\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\n\r\nconst CallUpInfo = () => {\r\n  const [profit, setProfit] = useState([0,0,0,0,0]);\r\n  const [year, setYear] = useState(\"2020\");\r\n  const [month, setMonth] = useState(\"0\");\r\n\r\n  const getprofit = () => {\r\n    GET(`/callupstastic?month=${month == 0 ? \"all\" : year + '-' + month + '-%'}`,\r\n      (json) => {\r\n        const temp = [];\r\n        for (let i = 0; i < 5; i++)\r\n          temp.push(json.profit[String(i + 1)]);\r\n        setProfit(temp);\r\n      },\r\n      (errMsg) => message.error(errMsg)\r\n    );\r\n  };\r\n\r\n  useEffect(getprofit, [year, month]);\r\n\r\n  var data = [\r\n    { type: '技术交流', value: profit[0], },\r\n    { type: '学术探讨', value: profit[1], },\r\n    { type: '社会实践', value: profit[2], },\r\n    { type: '公益志愿', value: profit[3], },\r\n    { type: '娱乐游玩', value: profit[4], },\r\n  ];\r\n  var config = {\r\n    appendPadding: 10,\r\n    data: data,\r\n    angleField: 'value',\r\n    colorField: 'type',\r\n    radius: 1,\r\n    innerRadius: 0.64,\r\n    meta: {\r\n      value: {\r\n        formatter: function formatter(v) {\r\n          return ''.concat(v, ' \\xA5');\r\n        },\r\n      },\r\n    },\r\n    label: {\r\n      type: 'inner',\r\n      offset: '-50%',\r\n      style: { textAlign: 'center' },\r\n      autoRotate: false,\r\n      content: '{value}',\r\n    },\r\n    interactions: [\r\n      // { type: 'element-selected' },\r\n      // { type: 'element-active' },\r\n      { type: 'pie-statistic-active' },\r\n    ],\r\n  };\r\n\r\n  return (\r\n    <Row align=\"middle\" >\r\n      <Col span={12} >\r\n        <div style={{ height: 200, padding: 20}} >\r\n          <Row align=\"middle\" style={{ marginTop: 50}}>\r\n            <Col offset={1} span={8} >\r\n              <Select defaultValue='2020' style={{ width: '100%' }} onChange={(value) => { setYear(value); }} >\r\n                <Select.Option value='2020'>2020</Select.Option>\r\n              </Select>\r\n            </Col>\r\n            <Col offset={1} span={2} >年</Col>\r\n            <Col offset={1} span={8} >\r\n              <Select defaultValue='0' style={{ width: '100%' }} onChange={(value) => { setMonth(value); }} >\r\n                <Select.Option value='0'>全部</Select.Option>\r\n                <Select.Option value='1'>1</Select.Option>\r\n                <Select.Option value='2'>2</Select.Option>\r\n                <Select.Option value='3'>3</Select.Option>\r\n                <Select.Option value='4'>4</Select.Option>\r\n                <Select.Option value='5'>5</Select.Option>\r\n                <Select.Option value='6'>6</Select.Option>\r\n                <Select.Option value='7'>7</Select.Option>\r\n                <Select.Option value='8'>8</Select.Option>\r\n                <Select.Option value='9'>9</Select.Option>\r\n                <Select.Option value='10'>10</Select.Option>\r\n                <Select.Option value='11'>11</Select.Option>\r\n                <Select.Option value='12'>12</Select.Option>\r\n              </Select>\r\n            </Col>\r\n            <Col offset={1} span={2} >月</Col>\r\n          </Row>\r\n        </div>\r\n        {/* <div style={{ height: 200, padding: 20 }} >\r\n          <Statistic title=\"收益\" value={profit} style={{ marginLeft: 150 }} valueStyle={{ fontSize: 50 }}/>\r\n        </div> */}\r\n      </Col>\r\n      <Col span={12} >\r\n        <div style={{ height: 400, padding: 20 }} >\r\n          <Pie {...config} />\r\n        </div>\r\n      </Col>\r\n    </Row>\r\n  );\r\n};\r\n\r\nconst UserList = () => {\r\n  const [listUserData, setListUserData] = useState([]);\r\n\r\n  const getUser = () => {\r\n    GET('/userlist', (json) => {\r\n      const tempList = [];\r\n      for (let i = 0; i < json.userinfo.length; i++) {\r\n        let user = json.userinfo[i]\r\n        console.log(user);\r\n        tempList.push({\r\n          name: user.name,\r\n          phone_num: user.phone_num,\r\n          description: user.description,\r\n          user_type: user.user_type,\r\n          identity_type: user.identity_type,\r\n          identity_num: user.identity_num,\r\n          level: user.level,\r\n          city: user.city,\r\n          modify_time: user.modify_time\r\n        });\r\n      };\r\n      setListUserData(tempList);\r\n    }, (errMsg) => {\r\n      message.error(errMsg);\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    getUser();\r\n  });\r\n\r\n  return (\r\n    <List\r\n      itemLayout=\"vertical\"\r\n      pagination={{\r\n        onChange: page => {\r\n          console.log(page);\r\n        },\r\n        pageSize: 3,\r\n      }}\r\n      dataSource={listUserData}\r\n      renderItem={item => (\r\n        <List.Item\r\n          key={item.name}\r\n          extra={\r\n            <img\r\n              width={200} alt=\"logo\"\r\n              src=\"https://gw.alipayobjects.com/zos/rmsportal/mqaQswcyDLcXyDKnZfES.png\"\r\n            />\r\n          }\r\n        >\r\n          <List.Item.Meta\r\n            avatar={<UserOutlined style={{ fontSize: 28 }} />}\r\n            title={\r\n              <p style={{ fontSize: 35, fontWeight: 'bold', margin: 0, padding: 0 }} >\r\n                {item.name}\r\n              </p>\r\n            }\r\n            description={\r\n              <p style={{ fontSize: 16, margin: 0, padding: 0 }} >\r\n                {item.description} 修改时间：{item.modify_time}\r\n              </p>\r\n            }\r\n            style={{ margin: 0, padding: 0, }}\r\n          />\r\n          <Row align=\"middle\" >\r\n            <Col span={1} >\r\n              <PhoneOutlined style={{ fontSize: 25}} />\r\n            </Col>\r\n            <Col offset={1} span={5} >\r\n              <p style={{ fontSize: 18, margin: 0 }} >\r\n                {item.phone_num}\r\n              </p>\r\n            </Col>\r\n            <Col offset={1} span={1} >\r\n              <IdcardOutlined style={{ fontSize: 25}} />\r\n            </Col>\r\n            <Col offset={1} span={3} >\r\n              <p style={{ fontSize: 18, margin: 0 }} >\r\n                { item.identity_type === 1 ? \"身份证\" : \"护照\" }\r\n              </p>\r\n            </Col>\r\n            <Col offset={1} span={8} >\r\n              <p style={{ fontSize: 18, margin: 0 }} >\r\n                {item.identity_num}\r\n              </p>\r\n            </Col>\r\n          </Row>\r\n          <Row align=\"middle\" >\r\n            <Col span={1} >\r\n              <HomeOutlined style={{ fontSize: 25}} />\r\n            </Col>\r\n            <Col offset={1} span={5} >\r\n              <p style={{ fontSize: 18, margin: 0 }} >\r\n                {item.city}\r\n              </p>\r\n            </Col>\r\n            <Col offset={1} span={1} >\r\n              <TeamOutlined style={{ fontSize: 25}} />\r\n            </Col>\r\n            <Col offset={1} span={3} >\r\n              <p style={{ fontSize: 18, margin: 0 }} >\r\n                { item.user_type === 2 ? \"管理员\" : \"普通用户\" }\r\n              </p>\r\n            </Col>\r\n            <Col offset={1} span={1} >\r\n              <TrophyOutlined style={{ fontSize: 25}} />\r\n            </Col>\r\n            <Col offset={1} span={3} >\r\n              <p style={{ fontSize: 18, margin: 0 }} >\r\n                {item.level} 级\r\n              </p>\r\n            </Col>\r\n          </Row>\r\n        </List.Item>\r\n      )}\r\n    />\r\n  );\r\n};\r\n","D:\\Web\\CallUp system\\front-end\\src\\AddEvent.js",["79","80","81","82","83","84","85","86","87","88","89","90","91","92"],"import React, { useState } from 'react';\n\n\nimport { Modal, Layout, Button, Upload, message, Input, Select, DatePicker } from 'antd'; \n\nimport { Divider, InputNumber, Form } from 'antd';\n\nimport { moment } from 'moment';\n\nimport { PlusCircleOutlined } from '@ant-design/icons'\nimport { UploadOutlined, LoadingOutlined, PlusOutlined } from '@ant-design/icons'\n\nimport { Row, Col } from \"antd\";\n\n\nimport swain from \"./swain.jpg\";\n\n\nimport { GET, POST } from './Network';\n\n\nimport { useHistory } from 'react-router-dom';\nimport { UserOutlined, LockOutlined, PhoneOutlined, HomeOutlined, IdcardOutlined, EditOutlined } from '@ant-design/icons';\n\n\n\nDate.prototype.format = function(fmt) { \n  var o = { \n     \"M+\" : this.getMonth()+1,                 //月份 \n     \"d+\" : this.getDate(),                    //日 \n     \"h+\" : this.getHours(),                   //小时 \n     \"m+\" : this.getMinutes(),                 //分 \n     \"s+\" : this.getSeconds(),                 //秒 \n     \"q+\" : Math.floor((this.getMonth()+3)/3), //季度 \n     \"S\"  : this.getMilliseconds()             //毫秒 \n }; \n if(/(y+)/.test(fmt)) {\n         fmt=fmt.replace(RegExp.$1, (this.getFullYear()+\"\").substr(4 - RegExp.$1.length)); \n }\n  for(var k in o) {\n     if(new RegExp(\"(\"+ k +\")\").test(fmt)){\n          fmt = fmt.replace(RegExp.$1, (RegExp.$1.length==1) ? (o[k]) : ((\"00\"+ o[k]).substr((\"\"+ o[k]).length)));\n      }\n  }\n return fmt; \n}\n\n\n\nexport const AddEvent = (props) => {\n  \n  var d = new Date().format('yyyy-MM-dd'); \n  function disabledDate(current) {\n    return current.format('YYYY-MM-DD') < d;\n  }\n\n  const [form] = Form.useForm();\n\n  const callUpSubmit = (values) => {\n    console.log(values);\n    const payload = {\n      'username': props.userVars.user, \n      'title': values.title,\n      'type': values.type,\n      'endtime': values.endtime.format('YYYY-MM-DD'),\n      'description': values.description,\n      'population': `${values.population}`,\n      'img': 'no image',\n    };\n    console.log(payload);\n\n    POST('/addcallup', payload, (json) => {\n      message.success(\"Call up added successfully!\")\n    }, (errMsg) => {\n      message.error(errMsg);\n      form.resetFields();\n    });\n    handleOk();\n  };\n\n  // const callUpSubmit = (values) => {\n  //   //console.log(values);\n  //   //console.log(values.image.fileList[0]);\n  //   const payload = {\n  //     'head': 'head',\n  //     'title': values.title,\n  //     'file': values.image.fileList[0],\n  //   };\n  //   console.log(payload);\n\n  //   POST('/test', payload, (json) => {\n  //     message.success(\"tested successfully!\")\n  //   }, (errMsg) => {\n  //     message.error(errMsg);\n  //     form.resetFields();\n  //   });\n\n  //   handleOk();\n  // };\n\n\n\n  \n\n\n\n  \n  const [isModalVisible, setIsModalVisible] = useState(false);\n\n  const showModal = () => {\n    setIsModalVisible(true);\n  };\n\n  const handleOk = () => {\n    setIsModalVisible(false);\n  };\n\n  const handleCancel = () => {\n    setIsModalVisible(false);\n  };\n\n\n\n  const pppp = {\n    name: 'thisisafile',\n    action: '',\n    headers: {\n      authorization: 'authorization-text',\n    },\n    // onChange(info) {\n    //   if (info.file.status !== 'uploading') {\n    //     console.log(info.file, info.fileList);\n    //   }\n    //   if (info.file.status === 'done') {\n    //     message.success(`${info.file.name} file uploaded successfully`);\n    //   } else if (info.file.status === 'error') {\n    //     message.error(`${info.file.name} file upload failed.`);\n    //   }\n    // },\n\n    // customRequest(file) {\n    //   console.log(file);\n\n    //   POST('/rec', file, (json) => {\n    //     message.success(\"!!!!!!!!!!!!!!!!!!\")\n    //   }, (errMsg) => {\n    //     message.error(errMsg);\n    //   });\n    // }\n  };\n\n\n\n  return (\n    <>\n      <Button\n        onClick={showModal}\n        style={{\n          marginLeft: 860\n        }}\n      >\n        new\n        <Divider type='vertical' />\n        <PlusCircleOutlined />\n      </Button>\n\n\n      <Modal\n        title={<div style={{fontSize: 20}}>Add new card</div>}\n        centered\n        width={910}\n        visible={isModalVisible}\n        onOk={handleOk}\n        onCancel={handleCancel}\n        destroyOnClose={true}\n        footer={null}\n      >\n        <Form form={form} name=\"addCallUp\" initialValues={{ remember: true }} onFinish={(values)=>callUpSubmit(values)} preserve={false}>\n\n          <Layout\n            style={{\n              backgroundColor: 'white',\n              height: 300,\n              marginTop: 15,\n              marginLeft: 15\n            }}\n          >\n          \n            <Layout\n              style={{\n                backgroundColor: 'transparent',\n              }}\n            >\n              <Layout.Sider\n                width={550}\n                style={{\n                  backgroundColor: 'transparent'\n                }}\n              >\n                <Layout\n                  width={450}\n                  style={{\n                    backgroundColor: 'transparent'\n                  }}\n                >\n                  <Layout\n                    height={300}\n                    style={{\n                      backgroundColor: 'transparent'\n                    }}\n                  >\n                    <Layout.Sider\n                      width={380}\n                      style={{\n                        backgroundColor: 'transparent',\n                      }}\n                    >\n                      <Form.Item name=\"title\" rules={[{ required: true, message: 'Please input the title!' }]} >\n                        <Input\n                          placeholder=\"Title\"\n                          autoComplete=\"off\"\n                          style={{\n                            width: 330,\n                          }}\n                        />\n                      </Form.Item>\n                    </Layout.Sider>\n\n                    <Layout.Content>\n                      <Form.Item name=\"type\" rules={[{ required: true, message: 'Please choose the type!' }]}>\n                        <Select style={{ width: 120,}}>\n                          <Select.Option value='1'>技术交流</Select.Option>\n                          <Select.Option value='2'>学业探讨</Select.Option>\n                          <Select.Option value='3'>社会实践</Select.Option>\n                          <Select.Option value='4'>公益志愿</Select.Option>\n                          <Select.Option value='5'>娱乐游玩</Select.Option>\n                        </Select>\n                      </Form.Item>\n                    </Layout.Content>\n                  </Layout>\n\n                  <Layout\n                    height={300}\n                    style={{\n                      backgroundColor: 'transparent',\n                    }}\n                  >\n                    <Layout.Sider\n                      width={250}\n                      style={{\n                        backgroundColor: 'transparent',\n                      }}\n                    >\n                      <Form.Item name=\"endtime\" rules={[{ required: true, message: 'Please input the end date!' }]} >\n                        <DatePicker\n                          placeholder='Finish date'\n                          disabledDate={disabledDate}\n                          inputReadOnly\n                          style={{\n                            width: 200\n                          }}\n                        />\n                      </Form.Item>\n                    </Layout.Sider>\n\n                    <Layout.Content>\n                      <Form.Item name=\"population\" rules={[{ required: true, message: 'Please input the person number!' }]} >\n                        <InputNumber\n                          min={1}\n                          placeholder='Population'\n                          style={{\n                            width: 120\n                          }}\n                        />\n                      </Form.Item>\n                    </Layout.Content>\n                  </Layout>\n                  \n                  <Form.Item name=\"description\" rules={[{ required: true, message: 'Please input the description!' }]} >\n                    <Input.TextArea\n                      placeholder=\"Discription\"\n                      showCount\n                      maxLength={140}\n                      rows={4}\n                      autoComplete=\"off\"\n                      style={{\n                        width: 500,\n                      }}\n                    />\n                  </Form.Item>\n\n                </Layout>\n\n              </Layout.Sider>\n\n              <Layout.Content>\n              \n                <Form.Item name=\"image\" rules={[{ required: false, message: 'Please upload the event picture!' }]} >\n                  <Upload {...pppp}>\n                    <Button icon={<UploadOutlined />}\n                      style={{\n                        width: 240,\n                        height: 180\n                      }}\n                    >upload</Button>\n                  </Upload>\n                </Form.Item>\n              </Layout.Content>\n            </Layout>\n\n            \n            <Layout style={{backgroundColor: 'transparent'}}>\n              <Row gutter={16} justify=\"end\" style={{marginRight: 10}}>\n                <Col>\n                  <Button key=\"back\" onClick={handleCancel}>\n                    Cancel\n                  </Button>\n                </Col>\n\n                <Col>\n                  <Form.Item>\n                    <Button key=\"submit\" type=\"primary\" htmlType=\"submit\">\n                      Submit\n                    </Button>\n                  </Form.Item>\n                </Col>\n\n              </Row>\n              \n\n\n            </Layout>\n\n          </Layout>\n\n        </Form>\n\n      </Modal>\n    </>\n  )\n}\n  ",{"ruleId":"93","replacedBy":"94"},{"ruleId":"95","replacedBy":"96"},{"ruleId":"97","severity":1,"message":"98","line":1,"column":17,"nodeType":"99","messageId":"100","endLine":1,"endColumn":25},{"ruleId":"97","severity":1,"message":"101","line":9,"column":8,"nodeType":"99","messageId":"100","endLine":9,"endColumn":12},{"ruleId":"102","severity":1,"message":"103","line":33,"column":3,"nodeType":"99","endLine":33,"endColumn":12,"suggestions":"104"},{"ruleId":"105","severity":1,"message":"106","line":69,"column":51,"nodeType":"107","messageId":"108","endLine":69,"endColumn":53},{"ruleId":"105","severity":1,"message":"106","line":94,"column":44,"nodeType":"107","messageId":"108","endLine":94,"endColumn":46},{"ruleId":"105","severity":1,"message":"106","line":97,"column":44,"nodeType":"107","messageId":"108","endLine":97,"endColumn":46},{"ruleId":"105","severity":1,"message":"106","line":100,"column":44,"nodeType":"107","messageId":"108","endLine":100,"endColumn":46},{"ruleId":"97","severity":1,"message":"109","line":4,"column":10,"nodeType":"99","messageId":"100","endLine":4,"endColumn":13},{"ruleId":"97","severity":1,"message":"110","line":2,"column":51,"nodeType":"99","messageId":"100","endLine":2,"endColumn":57},{"ruleId":"97","severity":1,"message":"111","line":2,"column":65,"nodeType":"99","messageId":"100","endLine":2,"endColumn":72},{"ruleId":"112","severity":1,"message":"113","line":21,"column":1,"nodeType":"114","messageId":"108","endLine":40,"endColumn":2},{"ruleId":"105","severity":1,"message":"106","line":36,"column":57,"nodeType":"107","messageId":"108","endLine":36,"endColumn":59},{"ruleId":"105","severity":1,"message":"106","line":78,"column":35,"nodeType":"107","messageId":"108","endLine":78,"endColumn":37},{"ruleId":"105","severity":1,"message":"106","line":78,"column":62,"nodeType":"107","messageId":"108","endLine":78,"endColumn":64},{"ruleId":"105","severity":1,"message":"115","line":78,"column":117,"nodeType":"107","messageId":"108","endLine":78,"endColumn":119},{"ruleId":"105","severity":1,"message":"106","line":83,"column":24,"nodeType":"107","messageId":"108","endLine":83,"endColumn":26},{"ruleId":"105","severity":1,"message":"106","line":90,"column":31,"nodeType":"107","messageId":"108","endLine":90,"endColumn":33},{"ruleId":"102","severity":1,"message":"116","line":116,"column":24,"nodeType":"117","endLine":116,"endColumn":77,"suggestions":"118"},{"ruleId":"93","replacedBy":"119"},{"ruleId":"95","replacedBy":"120"},{"ruleId":"97","severity":1,"message":"121","line":2,"column":56,"nodeType":"99","messageId":"100","endLine":2,"endColumn":65},{"ruleId":"105","severity":1,"message":"106","line":13,"column":24,"nodeType":"107","messageId":"108","endLine":13,"endColumn":26},{"ruleId":"105","severity":1,"message":"106","line":90,"column":39,"nodeType":"107","messageId":"108","endLine":90,"endColumn":41},{"ruleId":"97","severity":1,"message":"122","line":8,"column":10,"nodeType":"99","messageId":"100","endLine":8,"endColumn":16},{"ruleId":"97","severity":1,"message":"123","line":11,"column":26,"nodeType":"99","messageId":"100","endLine":11,"endColumn":41},{"ruleId":"97","severity":1,"message":"124","line":11,"column":43,"nodeType":"99","messageId":"100","endLine":11,"endColumn":55},{"ruleId":"97","severity":1,"message":"125","line":16,"column":8,"nodeType":"99","messageId":"100","endLine":16,"endColumn":13},{"ruleId":"97","severity":1,"message":"109","line":19,"column":10,"nodeType":"99","messageId":"100","endLine":19,"endColumn":13},{"ruleId":"97","severity":1,"message":"126","line":22,"column":10,"nodeType":"99","messageId":"100","endLine":22,"endColumn":20},{"ruleId":"97","severity":1,"message":"127","line":23,"column":10,"nodeType":"99","messageId":"100","endLine":23,"endColumn":22},{"ruleId":"97","severity":1,"message":"128","line":23,"column":24,"nodeType":"99","messageId":"100","endLine":23,"endColumn":36},{"ruleId":"97","severity":1,"message":"129","line":23,"column":38,"nodeType":"99","messageId":"100","endLine":23,"endColumn":51},{"ruleId":"97","severity":1,"message":"130","line":23,"column":53,"nodeType":"99","messageId":"100","endLine":23,"endColumn":65},{"ruleId":"97","severity":1,"message":"131","line":23,"column":67,"nodeType":"99","messageId":"100","endLine":23,"endColumn":81},{"ruleId":"97","severity":1,"message":"132","line":23,"column":83,"nodeType":"99","messageId":"100","endLine":23,"endColumn":95},{"ruleId":"112","severity":1,"message":"113","line":27,"column":1,"nodeType":"114","messageId":"108","endLine":46,"endColumn":2},{"ruleId":"105","severity":1,"message":"106","line":42,"column":57,"nodeType":"107","messageId":"108","endLine":42,"endColumn":59},"no-native-reassign",["133"],"no-negated-in-lhs",["134"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'Form' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect contains a call to 'setPageHeight'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [] as a second argument to the useEffect Hook.",["135"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'GET' is defined but never used.","'Avatar' is defined but never used.","'Popover' is defined but never used.","no-extend-native","Date prototype is read only, properties should not be added.","AssignmentExpression","Expected '!==' and instead saw '!='.","React Hook useEffect has missing dependencies: 'callupList' and 'props.userVars.user'. Either include them or remove the dependency array.","ArrayExpression",["136"],["133"],["134"],"'Statistic' is defined but never used.","'moment' is defined but never used.","'LoadingOutlined' is defined but never used.","'PlusOutlined' is defined but never used.","'swain' is defined but never used.","'useHistory' is defined but never used.","'UserOutlined' is defined but never used.","'LockOutlined' is defined but never used.","'PhoneOutlined' is defined but never used.","'HomeOutlined' is defined but never used.","'IdcardOutlined' is defined but never used.","'EditOutlined' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"137","fix":"138"},{"desc":"139","fix":"140"},"Add dependencies array: []",{"range":"141","text":"142"},"Update the dependencies array to be: [props.showtype, props.specificType, props.searchKey, props.userVars.user, callupList]",{"range":"143","text":"144"},[1238,1238],", []",[4262,4315],"[props.showtype, props.specificType, props.searchKey, props.userVars.user, callupList]"]