[{"D:\\Lugia\\PycharmProjects\\Web01_front-end\\src\\App.js":"1","D:\\Lugia\\PycharmProjects\\Web01_front-end\\src\\SignUp.js":"2","D:\\Lugia\\PycharmProjects\\Web01_front-end\\src\\Manager.js":"3","D:\\Lugia\\PycharmProjects\\Web01_front-end\\src\\Home.js":"4","D:\\Lugia\\PycharmProjects\\Web01_front-end\\src\\ShowCard.js":"5","D:\\Lugia\\PycharmProjects\\Web01_front-end\\src\\AddEvent.js":"6","D:\\Lugia\\PycharmProjects\\Web01_front-end\\src\\UserInfo.js":"7","D:\\Lugia\\PycharmProjects\\Web01_front-end\\src\\index.js":"8","D:\\Lugia\\PycharmProjects\\Web01_front-end\\src\\reportWebVitals.js":"9","D:\\Lugia\\PycharmProjects\\Web01_front-end\\src\\SignIn.js":"10","D:\\Lugia\\PycharmProjects\\Web01_front-end\\src\\Network.js":"11"},{"size":1852,"mtime":1608017717253,"results":"12","hashOfConfig":"13"},{"size":4711,"mtime":1608305280931,"results":"14","hashOfConfig":"13"},{"size":7094,"mtime":1608305280928,"results":"15","hashOfConfig":"13"},{"size":6374,"mtime":1608305342995,"results":"16","hashOfConfig":"13"},{"size":19618,"mtime":1608325277980,"results":"17","hashOfConfig":"13"},{"size":10135,"mtime":1608322531828,"results":"18","hashOfConfig":"13"},{"size":5108,"mtime":1608305280933,"results":"19","hashOfConfig":"13"},{"size":244,"mtime":1606475504000,"results":"20","hashOfConfig":"13"},{"size":362,"mtime":1606475504000,"results":"21","hashOfConfig":"13"},{"size":2844,"mtime":1608017668609,"results":"22","hashOfConfig":"13"},{"size":1140,"mtime":1607587250881,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"13ocyk4",{"filePath":"27","messages":"28","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"26"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"26"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":20,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"26"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"38","messages":"39","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"26"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"26"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"D:\\Lugia\\PycharmProjects\\Web01_front-end\\src\\App.js",[],["52","53"],"D:\\Lugia\\PycharmProjects\\Web01_front-end\\src\\SignUp.js",["54"],"import React, { useState } from 'react';\r\nimport { Button, Input, Form, message, Radio } from 'antd';\r\nimport { useHistory  } from 'react-router-dom';\r\nimport { GET, POST } from './Network';\r\nimport { UserOutlined, LockOutlined, PhoneOutlined, HomeOutlined, IdcardOutlined, EditOutlined } from '@ant-design/icons';\r\nimport doge from \"./doge.png\"\r\nimport './SignIn&Up.css'\r\n\r\nexport const SignUp = (props) => {\r\n  let history = useHistory();\r\n  const [idtype, setIDType] = useState(1);\r\n  const [form] = Form.useForm();\r\n\r\n  const formSubmit = (values) => {\r\n    console.log(values);\r\n    // 用户注册\r\n    const payload = {\r\n      'name': values.name,\r\n      'password': values.password,\r\n      'phone_num': values.phonenum,\r\n      'description': values.description,\r\n      'identity_type': idtype,\r\n      'identity_num': values.identitynum,\r\n      'city': values.city\r\n    };\r\n    console.log(payload);\r\n    POST('/signup', payload, (json) => {\r\n      message.success(\"Signup successfully, signin now!\")\r\n      history.push(\"/signin\");\r\n    }, (errMsg) => {\r\n      message.error(errMsg);\r\n      form.resetFields();\r\n    });\r\n  };\r\n  \r\n  if (!props.userVars.isLogIn) {\r\n    return (\r\n      <div\r\n        style={{\r\n          width: 350,\r\n          margin: 'auto',\r\n          textAlign: \"center\",\r\n        }}\r\n      >\r\n        <div style={{ textAlign: 'center', margin: \"40px 145px 20px 145px\" }} >\r\n          <img\r\n            style={{ height: '60px', }}\r\n            alt=\"logo\"\r\n            src={doge}\r\n          />\r\n        </div>\r\n        <h1 style={{ textAlign: 'center', }} >\r\n          召集令系统用户注册\r\n        </h1>\r\n        <div className=\"rcorners\" style={{ height: \"464px\" }}>\r\n          <Form form={form} name=\"basic\" initialValues={{ remember: true }} onFinish={(values)=>formSubmit(values)} >\r\n            <Form.Item name=\"name\" rules={[{ required: true, message: 'Please input your username!' }]} >\r\n              <Input\r\n                prefix={<UserOutlined className=\"site-form-item-icon\" />} placeholder=\"Username\"\r\n                style={{ width: '100%', borderRadius: '6px'}}\r\n              />\r\n            </Form.Item>\r\n            <Form.Item name=\"password\" rules={[{ required: true, message: 'Please input your password!' }]} >\r\n              <Input\r\n                prefix={<LockOutlined className=\"site-form-item-icon\" />}\r\n                type=\"password\"\r\n                placeholder=\"Password\"\r\n                style={{ width: '100%', borderRadius: '6px'}}\r\n              />\r\n            </Form.Item>\r\n            <Form.Item name=\"phonenum\" rules={[{ required: true, message: 'Please input your phone number!' }]} >\r\n              <Input\r\n                prefix={<PhoneOutlined className=\"site-form-item-icon\" />} placeholder=\"Phone number\"\r\n                style={{ width: '100%', borderRadius: '6px'}}\r\n              />\r\n            </Form.Item>\r\n            <Form.Item name=\"identitytype\" rules={[{ required: true, message: 'Please select your identity type!' }]} >\r\n              <Radio.Group onChange={(e)=>{setIDType(e.target.value)}} value={idtype} >\r\n                <Radio value={1} >身份证</Radio>\r\n                <Radio value={2} >护照</Radio>\r\n              </Radio.Group>\r\n            </Form.Item>\r\n            <Form.Item name=\"identitynum\" rules={[{ required: true, message: 'Please input your identity number!' }]} >\r\n              <Input\r\n                prefix={<IdcardOutlined className=\"site-form-item-icon\" />} placeholder=\"Identity number\"\r\n                style={{ width: '100%', borderRadius: '6px'}}\r\n              />\r\n            </Form.Item>\r\n            <Form.Item name=\"city\" rules={[{ required: true, message: 'Please input your city!' }]} >\r\n              <Input\r\n                prefix={<HomeOutlined className=\"site-form-item-icon\" />} placeholder=\"City\"\r\n                style={{ width: '100%', borderRadius: '6px'}}\r\n              />\r\n            </Form.Item>\r\n            <Form.Item name=\"description\" rules={[{ required: false, message: 'Introduce yourself!' }]} >\r\n              <Input\r\n                prefix={<EditOutlined className=\"site-form-item-icon\" />} placeholder=\"Introduce yourself\"\r\n                style={{ width: '100%', borderRadius: '6px'}}\r\n              />\r\n            </Form.Item>\r\n            <Form.Item >\r\n              <Button type=\"primary\" htmlType=\"submit\"\r\n                style={{ width: '100%', borderRadius: '6px', backgroundColor: '#F1C40F', border: 'none', fontSize: '16px', }}\r\n              >\r\n                Sign up\r\n              </Button>\r\n            </Form.Item>\r\n          </Form>\r\n        </div>\r\n      </div>\r\n    );\r\n  } else {\r\n    history.push(\"/\");\r\n    return (null);\r\n  };\r\n};\r\n","D:\\Lugia\\PycharmProjects\\Web01_front-end\\src\\Manager.js",["55"],"import React, { useState, useEffect } from 'react';\r\nimport { Menu, Modal, Button, List, Row, Col, message } from 'antd';\r\nimport { PieChartOutlined, UserOutlined, PhoneOutlined, IdcardOutlined, HomeOutlined, TeamOutlined, TrophyOutlined } from '@ant-design/icons';\r\nimport { GET } from './Network';\r\n\r\n\r\nexport const Manager = (props) => {\r\n  const [visible, setVisible] = useState(false);\r\n  const [current, setCurrent] = useState(\"1\");\r\n\r\n  const showModal = () => {\r\n    setVisible(true);\r\n  };\r\n\r\n  const handleOk = () => {\r\n    setVisible(false);\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    setVisible(false);\r\n  };\r\n\r\n  const formSubmit = (values) => {\r\n    console.log(values);\r\n  };\r\n\r\n  const handleClick = e => {\r\n    console.log('click ', e);\r\n    setCurrent(e.key);\r\n  };\r\n\r\n  const pages = {\r\n    '1': {\r\n      id: '1',\r\n      content: (\r\n        <CallUpInfo />\r\n      ),\r\n    },\r\n    '2': {\r\n      id: '2',\r\n      content: (\r\n        <UserList />\r\n      ),\r\n    },\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Button onClick={showModal} shape=\"round\">\r\n        Manage\r\n      </Button>\r\n      <Modal\r\n        visible={visible}\r\n        destroyOnClose={true}\r\n        title={\r\n          <Menu onClick={handleClick} selectedKeys={[current]} mode=\"horizontal\">\r\n            <Menu.Item key=\"1\" icon={<PieChartOutlined />}>\r\n              召集令统计信息\r\n            </Menu.Item>\r\n            <Menu.Item key=\"2\" icon={<UserOutlined />}>\r\n              用户列表\r\n            </Menu.Item>\r\n          </Menu>\r\n        }\r\n        onOk={handleOk}\r\n        onCancel={handleCancel}\r\n        closable={true}\r\n        width={'1000px'}\r\n        footer={\r\n          <Button key=\"back\" onClick={handleCancel}>\r\n            取消\r\n          </Button>\r\n        }\r\n      >\r\n        {pages[current].content}\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\n\r\nconst CallUpInfo = () => {\r\n  return (null);\r\n\r\n    // <List\r\n    //   itemLayout=\"horizontal\"\r\n    //   pagination={{\r\n    //     onChange: page => {\r\n    //       console.log(page);\r\n    //     },\r\n    //     pageSize: 5,\r\n    //   }}\r\n    //   dataSource={}\r\n    //   renderItem={item => (\r\n    //     <List.Item\r\n    //       key={item.title}\r\n    //     >\r\n    //       <List.Item.Meta\r\n    //         avatar={<SlidersTwoTone style={{ fontSize: 28 }} />}\r\n    //         title={<p style={{ fontSize: 20, margin: 0, padding: 0 }} >{item.title}</p>}\r\n    //         description={\r\n    //           <p style={{ fontSize: 14, margin: '0px 0px 4px', padding: 0 }} >\r\n    //             {item.time} by <b>{item.owner}</b> ver. <b>{item.version}</b>\r\n    //           </p>\r\n    //         }\r\n    //         style={{ margin: 0, padding: 0 }}\r\n    //       />\r\n    //       <Row justify=\"space-around\" align=\"middle\" >\r\n    //         <Col span={11} >\r\n    //           {item.description}\r\n    //         </Col>\r\n    //         <Col span={4} >\r\n    //           <p style={{ fontSize: 16, margin: 0, padding: 0 }}>Accuracy:</p>\r\n    //         </Col>\r\n    //         <Col span={3} >\r\n    //           <p style={{ fontSize: 24, margin: 0, padding: 0 }}><b>{item.accuracy}</b></p>\r\n    //         </Col>\r\n    //         <Col span={6} >\r\n    //           <Button shape=\"round\" type=\"primary\" disabled={item.current} style={{ border: 0 }}>\r\n    //             Set as Current\r\n    //           </Button>\r\n    //         </Col>\r\n    //       </Row>\r\n    //     </List.Item>\r\n    //   )}\r\n    // />\r\n  \r\n};\r\n\r\nconst UserList = () => {\r\n  const [listUserData, setListUserData] = useState([]);\r\n\r\n  const getUser = () => {\r\n    GET('/userlist', (json) => {\r\n      const tempList = [];\r\n      for (let i = 0; i < json.userinfo.length; i++) {\r\n        let user = json.userinfo[i]\r\n        console.log(user);\r\n        tempList.push({\r\n          name: user.name,\r\n          phone_num: user.phone_num,\r\n          description: user.description,\r\n          user_type: user.user_type,\r\n          identity_type: user.identity_type,\r\n          identity_num: user.identity_num,\r\n          level: user.level,\r\n          city: user.city,\r\n          modify_time: user.modify_time\r\n        });\r\n      };\r\n      setListUserData(tempList);\r\n    }, (errMsg) => {\r\n      message.error(errMsg);\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    getUser();\r\n  });\r\n\r\n  return (\r\n    <List\r\n      itemLayout=\"vertical\"\r\n      pagination={{\r\n        onChange: page => {\r\n          console.log(page);\r\n        },\r\n        pageSize: 3,\r\n      }}\r\n      dataSource={listUserData}\r\n      renderItem={item => (\r\n        <List.Item\r\n          key={item.name}\r\n          extra={\r\n            <img\r\n              width={200} alt=\"logo\"\r\n              src=\"https://gw.alipayobjects.com/zos/rmsportal/mqaQswcyDLcXyDKnZfES.png\"\r\n            />\r\n          }\r\n        >\r\n          <List.Item.Meta\r\n            avatar={<UserOutlined style={{ fontSize: 28 }} />}\r\n            title={\r\n              <p style={{ fontSize: 35, fontWeight: 'bold', margin: 0, padding: 0 }} >\r\n                {item.name}\r\n              </p>\r\n            }\r\n            description={\r\n              <p style={{ fontSize: 16, margin: 0, padding: 0 }} >\r\n                {item.description} 修改时间：{item.modify_time}\r\n              </p>\r\n            }\r\n            style={{ margin: 0, padding: 0, }}\r\n          />\r\n          <Row align=\"middle\" >\r\n            <Col span={1} >\r\n              <PhoneOutlined style={{ fontSize: 25}} />\r\n            </Col>\r\n            <Col offset={1} span={5} >\r\n              <p style={{ fontSize: 18, margin: 0 }} >\r\n                {item.phone_num}\r\n              </p>\r\n            </Col>\r\n            <Col offset={1} span={1} >\r\n              <IdcardOutlined style={{ fontSize: 25}} />\r\n            </Col>\r\n            <Col offset={1} span={3} >\r\n              <p style={{ fontSize: 18, margin: 0 }} >\r\n                { item.identity_type === 1 ? \"身份证\" : \"护照\" }\r\n              </p>\r\n            </Col>\r\n            <Col offset={1} span={8} >\r\n              <p style={{ fontSize: 18, margin: 0 }} >\r\n                {item.identity_num}\r\n              </p>\r\n            </Col>\r\n          </Row>\r\n          <Row align=\"middle\" >\r\n            <Col span={1} >\r\n              <HomeOutlined style={{ fontSize: 25}} />\r\n            </Col>\r\n            <Col offset={1} span={5} >\r\n              <p style={{ fontSize: 18, margin: 0 }} >\r\n                {item.city}\r\n              </p>\r\n            </Col>\r\n            <Col offset={1} span={1} >\r\n              <TeamOutlined style={{ fontSize: 25}} />\r\n            </Col>\r\n            <Col offset={1} span={3} >\r\n              <p style={{ fontSize: 18, margin: 0 }} >\r\n                { item.user_type === 2 ? \"管理员\" : \"普通用户\" }\r\n              </p>\r\n            </Col>\r\n            <Col offset={1} span={1} >\r\n              <TrophyOutlined style={{ fontSize: 25}} />\r\n            </Col>\r\n            <Col offset={1} span={3} >\r\n              <p style={{ fontSize: 18, margin: 0 }} >\r\n                {item.level} 级\r\n              </p>\r\n            </Col>\r\n          </Row>\r\n        </List.Item>\r\n      )}\r\n    />\r\n  );\r\n};\r\n","D:\\Lugia\\PycharmProjects\\Web01_front-end\\src\\Home.js",["56","57","58","59","60","61","62","63","64","65","66","67","68","69","70","71","72","73","74","75"],"import React, { useEffect, useState } from 'react';\r\nimport { Link, useLocation, useHistory } from \"react-router-dom\";\r\n\r\nimport { Layout, Menu, Button, Affix, Avatar, Card, Tag, Divider, Select, Input, Row, Col, Tooltip, ConfigProvider, DatePicker, message, Empty} from 'antd';\r\nimport { PlusCircleOutlined } from '@ant-design/icons'\r\n\r\nimport avatar from \"./avatar.png\";\r\nimport swain from \"./swain.jpg\";\r\n//import 'antd/dist/antd.css';\r\nimport './Home.less';\r\n\r\nimport { IconMap } from 'antd/lib/result';\r\nimport TextArea from 'antd/lib/input/TextArea';\r\nimport { ShowCard } from './ShowCard.js';\r\nimport { UserInfo } from './UserInfo.js';\r\nimport { Manager } from './Manager.js';\r\n\r\nimport { AddEvent } from './AddEvent.js';\r\nimport Form from 'antd/lib/form/Form';\r\n\r\nconst { Search } = Input;\r\nconst onSearch = value => console.log(value);\r\nconst cardnum = 35;\r\n\r\n\r\n\r\nexport const Home = (props) => {\r\n  let history = useHistory();\r\n  // let location = useLocation();\r\n  // props.userVars.setIsLogIn(true);\r\n  const [pageHeight, setPageHeight] = useState(window.document.body.clientHeight);\r\n  const [pageWidth, setPageWidth] = useState(window.document.body.innerWidth);\r\n\r\n  useEffect(() => {\r\n    setPageHeight(window.document.body.clientHeight);\r\n    setPageWidth(window.document.body.innerWidth);\r\n  });\r\n\r\n  if (props.userVars.isLogIn) {\r\n    return (\r\n      <Layout\r\n        className='layout'\r\n        style={{\r\n          height: pageHeight,\r\n          width: pageWidth\r\n        }}\r\n      >\r\n        <Affix offsetTop={0} >\r\n          <Layout.Sider\r\n            width={350}\r\n            style={{\r\n              borderRight: 0,\r\n              height: pageHeight\r\n            }}\r\n          >\r\n            <Layout\r\n              className='sider-back'\r\n              style={{\r\n                height: pageHeight,\r\n                backgroundColor: '#FDEBD0'\r\n              }}\r\n            >\r\n              <Layout.Content>\r\n                <Layout\r\n                  className='headpic-back'\r\n                  style={{\r\n                    height: 320,\r\n                    backgroundColor: 'transparent'\r\n                  }}\r\n                >\r\n                  <Avatar\r\n                    size={210}\r\n                    shape='circle'\r\n                    src={avatar}\r\n                    alt=\"headpic\"\r\n                    style={{\r\n                      margin: '70px 70px 40px 70px',\r\n                    }} />\r\n                </Layout>\r\n                \r\n                <div style={{ height: 200 }} >\r\n                  <UserInfo userVars={props.userVars} />\r\n                </div>\r\n\r\n                <div style={{ height: 50, textAlign: 'center' }} >\r\n                  <Button type='link' shape=\"round\"\r\n                    onClick={() => { props.userVars.setIsLogIn(false); }}\r\n                  >\r\n                    退出登录\r\n                  </Button>\r\n                </div>\r\n\r\n                <Menu\r\n                  theme='light'\r\n                  mode='inline'\r\n                  defaultSelectedKeys={['1']}\r\n                >\r\n                  <Menu.Item\r\n                    className='menu-text'\r\n                    key=\"1\"\r\n                  >All Events</Menu.Item>\r\n                  <Menu.Item\r\n                    className='menu-text'\r\n                    key=\"2\"\r\n                  >Posted</Menu.Item>\r\n                  <Menu.Item\r\n                    className='menu-text'\r\n                    key=\"3\"\r\n                  >Joined</Menu.Item>\r\n                  {props.userVars.userType == 2 ?\r\n                    <Menu.Item\r\n                      className='menu-text'\r\n                      key=\"4\"\r\n                    >\r\n                      Manage\r\n                    </Menu.Item> :\r\n                    <></>\r\n                  }\r\n                </Menu>\r\n\r\n                <Manager />\r\n\r\n                <Layout\r\n                  style={{\r\n                    backgroundColor: 'transparent'\r\n                  }}\r\n                >\r\n                  <p\r\n                    style={{\r\n                      marginTop: 60,\r\n                      textAlign: \"center\",\r\n                    }}\r\n                  >\r\n                    ©2020 Binbin&Xuanxuan. <br /> All rights reserved.\r\n                  </p>\r\n                </Layout>\r\n              </Layout.Content>\r\n            </Layout>\r\n          </Layout.Sider>\r\n        </Affix>\r\n\r\n        <Layout.Content className='content-back' width={pageWidth - 350} >\r\n          <Layout >\r\n            <Affix offsetTop={0} >\r\n              <Layout.Header\r\n                className='header-back'\r\n                style={{\r\n                  padding: 0,\r\n                  // backgroundColor: 'black'\r\n                }}\r\n              >\r\n                <Search\r\n                  className=\"searchBox\"\r\n                  placeholder='Search something'\r\n                  allowClear\r\n                  onSearch={onSearch}\r\n                  background='transparent'\r\n                  style={{\r\n                    width: 400,\r\n                    margin: '16px 26px',\r\n                    background: 'transparent',\r\n                    \r\n                  }}\r\n                />\r\n                <Select\r\n                  defaultValue='all'\r\n                  style={{ width: 120 }}  \r\n                >\r\n                  <Select.Option value='all'>ALL</Select.Option>\r\n                  <Select.Option value='1'>技术交流</Select.Option>\r\n                  <Select.Option value='2'>学业探讨</Select.Option>\r\n                  <Select.Option value='3'>社会实践</Select.Option>\r\n                  <Select.Option value='4'>公益志愿</Select.Option>\r\n                  <Select.Option value='5'>娱乐游玩</Select.Option>\r\n                </Select>\r\n                <AddEvent userVars={props.userVars} />\r\n              </Layout.Header>\r\n            </Affix>\r\n\r\n            <Layout.Content className='content-back' >\r\n              <div className=\"card-area\"\r\n                style={{\r\n                  marginTop: 50,\r\n                  marginLeft: 70\r\n                }}\r\n              >\r\n                <ShowCard userVars={ props.userVars } />\r\n              </div>\r\n            </Layout.Content>\r\n          </Layout>\r\n        </Layout.Content>\r\n      </Layout>\r\n    );\r\n  }\r\n  else {\r\n    history.push(\"/signin\");\r\n    return (null);\r\n  };\r\n};\r\n","D:\\Lugia\\PycharmProjects\\Web01_front-end\\src\\ShowCard.js",["76","77","78","79","80","81"],"D:\\Lugia\\PycharmProjects\\Web01_front-end\\src\\AddEvent.js",["82","83","84","85","86","87","88","89","90","91","92","93","94","95","96"],"import React, { useState } from 'react';\r\n\r\n\r\nimport { Modal, Layout, Button, Upload, message, Input, Select, DatePicker } from 'antd'; \r\n\r\nimport { Divider, InputNumber, Form } from 'antd';\r\n\r\nimport { moment } from 'moment';\r\n\r\nimport { PlusCircleOutlined } from '@ant-design/icons'\r\nimport { UploadOutlined, LoadingOutlined, PlusOutlined } from '@ant-design/icons'\r\n\r\nimport { Row, Col } from \"antd\";\r\n\r\nimport avatar from \"./avatar.png\";\r\nimport swain from \"./swain.jpg\";\r\n\r\n\r\nimport { GET, POST } from './Network';\r\n\r\n\r\nimport { useHistory } from 'react-router-dom';\r\nimport { UserOutlined, LockOutlined, PhoneOutlined, HomeOutlined, IdcardOutlined, EditOutlined } from '@ant-design/icons';\r\n\r\n\r\n\r\nDate.prototype.format = function(fmt) { \r\n  var o = { \r\n     \"M+\" : this.getMonth()+1,                 //月份 \r\n     \"d+\" : this.getDate(),                    //日 \r\n     \"h+\" : this.getHours(),                   //小时 \r\n     \"m+\" : this.getMinutes(),                 //分 \r\n     \"s+\" : this.getSeconds(),                 //秒 \r\n     \"q+\" : Math.floor((this.getMonth()+3)/3), //季度 \r\n     \"S\"  : this.getMilliseconds()             //毫秒 \r\n }; \r\n if(/(y+)/.test(fmt)) {\r\n         fmt=fmt.replace(RegExp.$1, (this.getFullYear()+\"\").substr(4 - RegExp.$1.length)); \r\n }\r\n  for(var k in o) {\r\n     if(new RegExp(\"(\"+ k +\")\").test(fmt)){\r\n          fmt = fmt.replace(RegExp.$1, (RegExp.$1.length==1) ? (o[k]) : ((\"00\"+ o[k]).substr((\"\"+ o[k]).length)));\r\n      }\r\n  }\r\n return fmt; \r\n}\r\n\r\n\r\n\r\nexport const AddEvent = (props) => {\r\n  \r\n  var d = new Date().format('yyyy-MM-dd'); \r\n  function disabledDate(current) {\r\n    return current.format('YYYY-MM-DD') < d;\r\n  }\r\n\r\n  const [form] = Form.useForm();\r\n\r\n  const callUpSubmit = (values) => {\r\n    console.log(values);\r\n    const payload = {\r\n      'username': props.userVars.user, \r\n      'title': values.title,\r\n      'type': values.type,\r\n      'endtime': values.endtime.format('YYYY-MM-DD'),\r\n      'description': values.description,\r\n      'population': `${values.population}`,\r\n      'img': 'no image',\r\n    };\r\n    console.log(payload);\r\n\r\n    POST('/addcallup', payload, (json) => {\r\n      message.success(\"Call up added successfully!\")\r\n    }, (errMsg) => {\r\n      message.error(errMsg);\r\n      form.resetFields();\r\n    });\r\n    handleOk();\r\n  };\r\n\r\n  // const callUpSubmit = (values) => {\r\n  //   //console.log(values);\r\n  //   //console.log(values.image.fileList[0]);\r\n  //   const payload = {\r\n  //     'head': 'head',\r\n  //     'title': values.title,\r\n  //     'file': values.image.fileList[0],\r\n  //   };\r\n  //   console.log(payload);\r\n\r\n  //   POST('/test', payload, (json) => {\r\n  //     message.success(\"tested successfully!\")\r\n  //   }, (errMsg) => {\r\n  //     message.error(errMsg);\r\n  //     form.resetFields();\r\n  //   });\r\n\r\n  //   handleOk();\r\n  // };\r\n\r\n\r\n\r\n  \r\n\r\n\r\n\r\n  \r\n  const [isModalVisible, setIsModalVisible] = useState(false);\r\n\r\n  const showModal = () => {\r\n    setIsModalVisible(true);\r\n  };\r\n\r\n  const handleOk = () => {\r\n    setIsModalVisible(false);\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    setIsModalVisible(false);\r\n  };\r\n\r\n\r\n\r\n  const pppp = {\r\n    name: 'thisisafile',\r\n    action: '',\r\n    headers: {\r\n      authorization: 'authorization-text',\r\n    },\r\n    // onChange(info) {\r\n    //   if (info.file.status !== 'uploading') {\r\n    //     console.log(info.file, info.fileList);\r\n    //   }\r\n    //   if (info.file.status === 'done') {\r\n    //     message.success(`${info.file.name} file uploaded successfully`);\r\n    //   } else if (info.file.status === 'error') {\r\n    //     message.error(`${info.file.name} file upload failed.`);\r\n    //   }\r\n    // },\r\n\r\n    // customRequest(file) {\r\n    //   console.log(file);\r\n\r\n    //   POST('/rec', file, (json) => {\r\n    //     message.success(\"!!!!!!!!!!!!!!!!!!\")\r\n    //   }, (errMsg) => {\r\n    //     message.error(errMsg);\r\n    //   });\r\n    // }\r\n  };\r\n\r\n\r\n\r\n  return (\r\n    <>\r\n      <Button\r\n        onClick={showModal}\r\n        style={{\r\n          marginLeft: 860\r\n        }}\r\n      >\r\n        new\r\n        <Divider type='vertical' />\r\n        <PlusCircleOutlined />\r\n      </Button>\r\n\r\n\r\n      <Modal\r\n        title={<div style={{fontSize: 20}}>Add new card</div>}\r\n        centered\r\n        width={910}\r\n        visible={isModalVisible}\r\n        onOk={handleOk}\r\n        onCancel={handleCancel}\r\n        destroyOnClose={true}\r\n        footer={null}\r\n      >\r\n        <Form form={form} name=\"addCallUp\" initialValues={{ remember: true }} onFinish={(values)=>callUpSubmit(values)} preserve={false}>\r\n\r\n          <Layout\r\n            style={{\r\n              backgroundColor: 'white',\r\n              height: 300,\r\n              marginTop: 15,\r\n              marginLeft: 15\r\n            }}\r\n          >\r\n          \r\n            <Layout\r\n              style={{\r\n                backgroundColor: 'transparent',\r\n              }}\r\n            >\r\n              <Layout.Sider\r\n                width={550}\r\n                style={{\r\n                  backgroundColor: 'transparent'\r\n                }}\r\n              >\r\n                <Layout\r\n                  width={450}\r\n                  style={{\r\n                    backgroundColor: 'transparent'\r\n                  }}\r\n                >\r\n                  <Layout\r\n                    height={300}\r\n                    style={{\r\n                      backgroundColor: 'transparent'\r\n                    }}\r\n                  >\r\n                    <Layout.Sider\r\n                      width={380}\r\n                      style={{\r\n                        backgroundColor: 'transparent',\r\n                      }}\r\n                    >\r\n                      <Form.Item name=\"title\" rules={[{ required: true, message: 'Please input the title!' }]} >\r\n                        <Input\r\n                          placeholder=\"Title\"\r\n                          autoComplete=\"off\"\r\n                          style={{\r\n                            width: 330,\r\n                          }}\r\n                        />\r\n                      </Form.Item>\r\n                    </Layout.Sider>\r\n\r\n                    <Layout.Content>\r\n                      <Form.Item name=\"type\" rules={[{ required: true, message: 'Please choose the type!' }]}>\r\n                        <Select style={{ width: 120,}}>\r\n                          <Select.Option value='1'>技术交流</Select.Option>\r\n                          <Select.Option value='2'>学业探讨</Select.Option>\r\n                          <Select.Option value='3'>社会实践</Select.Option>\r\n                          <Select.Option value='4'>公益志愿</Select.Option>\r\n                          <Select.Option value='5'>娱乐游玩</Select.Option>\r\n                        </Select>\r\n                      </Form.Item>\r\n                    </Layout.Content>\r\n                  </Layout>\r\n\r\n                  <Layout\r\n                    height={300}\r\n                    style={{\r\n                      backgroundColor: 'transparent',\r\n                    }}\r\n                  >\r\n                    <Layout.Sider\r\n                      width={250}\r\n                      style={{\r\n                        backgroundColor: 'transparent',\r\n                      }}\r\n                    >\r\n                      <Form.Item name=\"endtime\" rules={[{ required: true, message: 'Please input the end date!' }]} >\r\n                        <DatePicker\r\n                          placeholder='Finish date'\r\n                          disabledDate={disabledDate}\r\n                          inputReadOnly\r\n                          style={{\r\n                            width: 200\r\n                          }}\r\n                        />\r\n                      </Form.Item>\r\n                    </Layout.Sider>\r\n\r\n                    <Layout.Content>\r\n                      <Form.Item name=\"population\" rules={[{ required: true, message: 'Please input the person number!' }]} >\r\n                        <InputNumber\r\n                          min={1}\r\n                          placeholder='Population'\r\n                          style={{\r\n                            width: 120\r\n                          }}\r\n                        />\r\n                      </Form.Item>\r\n                    </Layout.Content>\r\n                  </Layout>\r\n                  \r\n                  <Form.Item name=\"description\" rules={[{ required: true, message: 'Please input the description!' }]} >\r\n                    <Input.TextArea\r\n                      placeholder=\"Discription\"\r\n                      showCount\r\n                      maxLength={140}\r\n                      rows={4}\r\n                      autoComplete=\"off\"\r\n                      style={{\r\n                        width: 500,\r\n                      }}\r\n                    />\r\n                  </Form.Item>\r\n\r\n                </Layout>\r\n\r\n              </Layout.Sider>\r\n\r\n              <Layout.Content>\r\n              \r\n                <Form.Item name=\"image\" rules={[{ required: false, message: 'Please upload the event picture!' }]} >\r\n                  <Upload {...pppp}>\r\n                    <Button icon={<UploadOutlined />}\r\n                      style={{\r\n                        width: 240,\r\n                        height: 180\r\n                      }}\r\n                    >upload</Button>\r\n                  </Upload>\r\n                </Form.Item>\r\n              </Layout.Content>\r\n            </Layout>\r\n\r\n            \r\n            <Layout style={{backgroundColor: 'transparent'}}>\r\n              <Row gutter={16} justify=\"end\" style={{marginRight: 10}}>\r\n                <Col>\r\n                  <Button key=\"back\" onClick={handleCancel}>\r\n                    Cancel\r\n                  </Button>\r\n                </Col>\r\n\r\n                <Col>\r\n                  <Form.Item>\r\n                    <Button key=\"submit\" type=\"primary\" htmlType=\"submit\">\r\n                      Submit\r\n                    </Button>\r\n                  </Form.Item>\r\n                </Col>\r\n\r\n              </Row>\r\n              \r\n\r\n\r\n            </Layout>\r\n\r\n          </Layout>\r\n\r\n        </Form>\r\n\r\n      </Modal>\r\n    </>\r\n  )\r\n}\r\n  ","D:\\Lugia\\PycharmProjects\\Web01_front-end\\src\\UserInfo.js",[],"D:\\Lugia\\PycharmProjects\\Web01_front-end\\src\\index.js",[],"D:\\Lugia\\PycharmProjects\\Web01_front-end\\src\\reportWebVitals.js",[],"D:\\Lugia\\PycharmProjects\\Web01_front-end\\src\\SignIn.js",["97"],"import React, { useState } from 'react';\r\nimport { Button, Input, Form, message } from 'antd';\r\nimport { useHistory  } from 'react-router-dom';\r\nimport { GET } from './Network';\r\nimport { UserOutlined, LockOutlined } from '@ant-design/icons';\r\nimport doge from \"./doge.png\"\r\nimport './SignIn&Up.css'\r\n\r\nexport const SignIn = (props) => {\r\n  let history = useHistory();\r\n  const [form] = Form.useForm();\r\n\r\n  const formSubmit = (values) => {\r\n    // 用户验证\r\n    GET(`/signin?name=${values.name}&password=${values.password}`, (json) => {\r\n      console.log(json);\r\n      props.userVars.userLogIn(json.userinfo[0]);\r\n      history.push(\"/\");\r\n    }, (errMsg) => {\r\n        message.error(errMsg);\r\n        form.resetFields();\r\n    })\r\n\r\n  };\r\n\r\n  if (!props.userVars.isLogIn) {\r\n    return (\r\n      <div\r\n        style={{\r\n          width: 350,\r\n          margin: 'auto',\r\n          textAlign: \"center\",\r\n        }}\r\n      >\r\n        <div style={{ textAlign: 'center', margin: \"40px 145px 20px 145px\" }} >\r\n          <img\r\n            style={{ height: '60px', }}\r\n            alt=\"logo\"\r\n            src={doge}\r\n          />\r\n        </div>\r\n        <h1 style={{ textAlign: 'center', }} >\r\n          召集令系统用户登录\r\n        </h1>\r\n        <div className=\"rcorners\" style={{ height: \"184px\" }} >\r\n          <Form form={form} name=\"basic\" initialValues={{ remember: true }} onFinish={(values)=>formSubmit(values)} >\r\n            <Form.Item name=\"name\" rules={[{ required: true, message: 'Please input your username!' }]} >\r\n              <Input\r\n                prefix={<UserOutlined className=\"site-form-item-icon\" />} placeholder=\"Username\"\r\n                style={{ width: '100%', borderRadius: '6px'}}\r\n              />  \r\n            </Form.Item>\r\n            <Form.Item name=\"password\" rules={[{ required: true, message: 'Please input your password!' }]} >\r\n              <Input\r\n                prefix={<LockOutlined className=\"site-form-item-icon\" />}\r\n                type=\"password\"\r\n                placeholder=\"Password\"\r\n                style={{ width: '100%', borderRadius: '6px'}}\r\n              />\r\n            </Form.Item>\r\n            <Form.Item >\r\n              <Button type=\"primary\" htmlType=\"submit\"\r\n                style={{ width: '100%', borderRadius: '6px', backgroundColor: '#F1C40F', border: 'none', fontSize: '16px', }}\r\n              >\r\n                Sign in\r\n              </Button>\r\n            </Form.Item>\r\n          </Form>\r\n          <Button type=\"link\" htmlType=\"button\"\r\n            style={{ width: '100%', borderRadius: '6px', border: 'none', fontSize: '16px', }}\r\n            onClick={()=>{history.push(\"/signup\")}}\r\n          >\r\n            Create a new user!\r\n          </Button>\r\n        </div>\r\n      </div>\r\n    );\r\n  } else {\r\n    history.push(\"/\");\r\n    return (null);\r\n  };\r\n};\r\n\r\n","D:\\Lugia\\PycharmProjects\\Web01_front-end\\src\\Network.js",[],{"ruleId":"98","replacedBy":"99"},{"ruleId":"100","replacedBy":"101"},{"ruleId":"102","severity":1,"message":"103","line":4,"column":10,"nodeType":"104","messageId":"105","endLine":4,"endColumn":13},{"ruleId":"102","severity":1,"message":"106","line":23,"column":9,"nodeType":"104","messageId":"105","endLine":23,"endColumn":19},{"ruleId":"102","severity":1,"message":"107","line":2,"column":10,"nodeType":"104","messageId":"105","endLine":2,"endColumn":14},{"ruleId":"102","severity":1,"message":"108","line":2,"column":16,"nodeType":"104","messageId":"105","endLine":2,"endColumn":27},{"ruleId":"102","severity":1,"message":"109","line":4,"column":47,"nodeType":"104","messageId":"105","endLine":4,"endColumn":51},{"ruleId":"102","severity":1,"message":"110","line":4,"column":53,"nodeType":"104","messageId":"105","endLine":4,"endColumn":56},{"ruleId":"102","severity":1,"message":"111","line":4,"column":58,"nodeType":"104","messageId":"105","endLine":4,"endColumn":65},{"ruleId":"102","severity":1,"message":"112","line":4,"column":82,"nodeType":"104","messageId":"105","endLine":4,"endColumn":85},{"ruleId":"102","severity":1,"message":"113","line":4,"column":87,"nodeType":"104","messageId":"105","endLine":4,"endColumn":90},{"ruleId":"102","severity":1,"message":"114","line":4,"column":92,"nodeType":"104","messageId":"105","endLine":4,"endColumn":99},{"ruleId":"102","severity":1,"message":"115","line":4,"column":101,"nodeType":"104","messageId":"105","endLine":4,"endColumn":115},{"ruleId":"102","severity":1,"message":"116","line":4,"column":117,"nodeType":"104","messageId":"105","endLine":4,"endColumn":127},{"ruleId":"102","severity":1,"message":"117","line":4,"column":129,"nodeType":"104","messageId":"105","endLine":4,"endColumn":136},{"ruleId":"102","severity":1,"message":"118","line":4,"column":138,"nodeType":"104","messageId":"105","endLine":4,"endColumn":143},{"ruleId":"102","severity":1,"message":"119","line":5,"column":10,"nodeType":"104","messageId":"105","endLine":5,"endColumn":28},{"ruleId":"102","severity":1,"message":"120","line":8,"column":8,"nodeType":"104","messageId":"105","endLine":8,"endColumn":13},{"ruleId":"102","severity":1,"message":"121","line":12,"column":10,"nodeType":"104","messageId":"105","endLine":12,"endColumn":17},{"ruleId":"102","severity":1,"message":"122","line":13,"column":8,"nodeType":"104","messageId":"105","endLine":13,"endColumn":16},{"ruleId":"102","severity":1,"message":"123","line":19,"column":8,"nodeType":"104","messageId":"105","endLine":19,"endColumn":12},{"ruleId":"102","severity":1,"message":"124","line":23,"column":7,"nodeType":"104","messageId":"105","endLine":23,"endColumn":14},{"ruleId":"125","severity":1,"message":"126","line":34,"column":3,"nodeType":"104","endLine":34,"endColumn":12,"suggestions":"127"},{"ruleId":"128","severity":1,"message":"129","line":110,"column":44,"nodeType":"130","messageId":"131","endLine":110,"endColumn":46},{"ruleId":"102","severity":1,"message":"132","line":2,"column":44,"nodeType":"104","messageId":"105","endLine":2,"endColumn":49},{"ruleId":"102","severity":1,"message":"133","line":2,"column":51,"nodeType":"104","messageId":"105","endLine":2,"endColumn":57},{"ruleId":"102","severity":1,"message":"134","line":2,"column":65,"nodeType":"104","messageId":"105","endLine":2,"endColumn":72},{"ruleId":"102","severity":1,"message":"135","line":8,"column":8,"nodeType":"104","messageId":"105","endLine":8,"endColumn":14},{"ruleId":"136","severity":1,"message":"137","line":12,"column":1,"nodeType":"138","messageId":"131","endLine":31,"endColumn":2},{"ruleId":"128","severity":1,"message":"129","line":27,"column":57,"nodeType":"130","messageId":"131","endLine":27,"endColumn":59},{"ruleId":"102","severity":1,"message":"139","line":8,"column":10,"nodeType":"104","messageId":"105","endLine":8,"endColumn":16},{"ruleId":"102","severity":1,"message":"140","line":11,"column":26,"nodeType":"104","messageId":"105","endLine":11,"endColumn":41},{"ruleId":"102","severity":1,"message":"141","line":11,"column":43,"nodeType":"104","messageId":"105","endLine":11,"endColumn":55},{"ruleId":"102","severity":1,"message":"135","line":15,"column":8,"nodeType":"104","messageId":"105","endLine":15,"endColumn":14},{"ruleId":"102","severity":1,"message":"120","line":16,"column":8,"nodeType":"104","messageId":"105","endLine":16,"endColumn":13},{"ruleId":"102","severity":1,"message":"103","line":19,"column":10,"nodeType":"104","messageId":"105","endLine":19,"endColumn":13},{"ruleId":"102","severity":1,"message":"142","line":22,"column":10,"nodeType":"104","messageId":"105","endLine":22,"endColumn":20},{"ruleId":"102","severity":1,"message":"143","line":23,"column":10,"nodeType":"104","messageId":"105","endLine":23,"endColumn":22},{"ruleId":"102","severity":1,"message":"144","line":23,"column":24,"nodeType":"104","messageId":"105","endLine":23,"endColumn":36},{"ruleId":"102","severity":1,"message":"145","line":23,"column":38,"nodeType":"104","messageId":"105","endLine":23,"endColumn":51},{"ruleId":"102","severity":1,"message":"146","line":23,"column":53,"nodeType":"104","messageId":"105","endLine":23,"endColumn":65},{"ruleId":"102","severity":1,"message":"147","line":23,"column":67,"nodeType":"104","messageId":"105","endLine":23,"endColumn":81},{"ruleId":"102","severity":1,"message":"148","line":23,"column":83,"nodeType":"104","messageId":"105","endLine":23,"endColumn":95},{"ruleId":"136","severity":1,"message":"137","line":27,"column":1,"nodeType":"138","messageId":"131","endLine":46,"endColumn":2},{"ruleId":"128","severity":1,"message":"129","line":42,"column":57,"nodeType":"130","messageId":"131","endLine":42,"endColumn":59},{"ruleId":"102","severity":1,"message":"149","line":1,"column":17,"nodeType":"104","messageId":"105","endLine":1,"endColumn":25},"no-native-reassign",["150"],"no-negated-in-lhs",["151"],"no-unused-vars","'GET' is defined but never used.","Identifier","unusedVar","'formSubmit' is assigned a value but never used.","'Link' is defined but never used.","'useLocation' is defined but never used.","'Card' is defined but never used.","'Tag' is defined but never used.","'Divider' is defined but never used.","'Row' is defined but never used.","'Col' is defined but never used.","'Tooltip' is defined but never used.","'ConfigProvider' is defined but never used.","'DatePicker' is defined but never used.","'message' is defined but never used.","'Empty' is defined but never used.","'PlusCircleOutlined' is defined but never used.","'swain' is defined but never used.","'IconMap' is defined but never used.","'TextArea' is defined but never used.","'Form' is defined but never used.","'cardnum' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect contains a call to 'setPageHeight'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [] as a second argument to the useEffect Hook.",["152"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'Badge' is defined but never used.","'Avatar' is defined but never used.","'Popover' is defined but never used.","'avatar' is defined but never used.","no-extend-native","Date prototype is read only, properties should not be added.","AssignmentExpression","'moment' is defined but never used.","'LoadingOutlined' is defined but never used.","'PlusOutlined' is defined but never used.","'useHistory' is defined but never used.","'UserOutlined' is defined but never used.","'LockOutlined' is defined but never used.","'PhoneOutlined' is defined but never used.","'HomeOutlined' is defined but never used.","'IdcardOutlined' is defined but never used.","'EditOutlined' is defined but never used.","'useState' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"153","fix":"154"},"Add dependencies array: []",{"range":"155","text":"156"},[1310,1310],", []"]