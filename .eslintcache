[{"D:\\Web\\CallUp system\\front-end\\src\\index.js":"1","D:\\Web\\CallUp system\\front-end\\src\\App.js":"2","D:\\Web\\CallUp system\\front-end\\src\\reportWebVitals.js":"3","D:\\Web\\CallUp system\\front-end\\src\\SignIn.js":"4","D:\\Web\\CallUp system\\front-end\\src\\Home.js":"5","D:\\Web\\CallUp system\\front-end\\src\\SignUp.js":"6","D:\\Web\\CallUp system\\front-end\\src\\ShowCard.js":"7","D:\\Web\\CallUp system\\front-end\\src\\Network.js":"8","D:\\Web\\CallUp system\\front-end\\src\\UserInfo.js":"9","D:\\Web\\CallUp system\\front-end\\src\\Manager.js":"10","D:\\Web\\CallUp system\\front-end\\src\\AddEvent.js":"11"},{"size":244,"mtime":1607532592490,"results":"12","hashOfConfig":"13"},{"size":1870,"mtime":1608314830307,"results":"14","hashOfConfig":"13"},{"size":362,"mtime":499162500000,"results":"15","hashOfConfig":"13"},{"size":2844,"mtime":1607955016799,"results":"16","hashOfConfig":"13"},{"size":5967,"mtime":1608325575221,"results":"17","hashOfConfig":"13"},{"size":4711,"mtime":1608192605563,"results":"18","hashOfConfig":"13"},{"size":22349,"mtime":1608326112993,"results":"19","hashOfConfig":"13"},{"size":1140,"mtime":1607532593818,"results":"20","hashOfConfig":"13"},{"size":5108,"mtime":1608222661150,"results":"21","hashOfConfig":"13"},{"size":7528,"mtime":1608325451349,"results":"22","hashOfConfig":"13"},{"size":9760,"mtime":1608325575311,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"379jtk",{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"26"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"36","messages":"37","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"26"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"47","messages":"48","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"26"},"D:\\Web\\CallUp system\\front-end\\src\\index.js",[],["50","51"],"D:\\Web\\CallUp system\\front-end\\src\\App.js",[],"D:\\Web\\CallUp system\\front-end\\src\\reportWebVitals.js",[],"D:\\Web\\CallUp system\\front-end\\src\\SignIn.js",["52"],"import React, { useState } from 'react';\r\nimport { Button, Input, Form, message } from 'antd';\r\nimport { useHistory  } from 'react-router-dom';\r\nimport { GET } from './Network';\r\nimport { UserOutlined, LockOutlined } from '@ant-design/icons';\r\nimport doge from \"./doge.png\"\r\nimport './SignIn&Up.css'\r\n\r\nexport const SignIn = (props) => {\r\n  let history = useHistory();\r\n  const [form] = Form.useForm();\r\n\r\n  const formSubmit = (values) => {\r\n    // 用户验证\r\n    GET(`/signin?name=${values.name}&password=${values.password}`, (json) => {\r\n      console.log(json);\r\n      props.userVars.userLogIn(json.userinfo[0]);\r\n      history.push(\"/\");\r\n    }, (errMsg) => {\r\n        message.error(errMsg);\r\n        form.resetFields();\r\n    })\r\n\r\n  };\r\n\r\n  if (!props.userVars.isLogIn) {\r\n    return (\r\n      <div\r\n        style={{\r\n          width: 350,\r\n          margin: 'auto',\r\n          textAlign: \"center\",\r\n        }}\r\n      >\r\n        <div style={{ textAlign: 'center', margin: \"40px 145px 20px 145px\" }} >\r\n          <img\r\n            style={{ height: '60px', }}\r\n            alt=\"logo\"\r\n            src={doge}\r\n          />\r\n        </div>\r\n        <h1 style={{ textAlign: 'center', }} >\r\n          召集令系统用户登录\r\n        </h1>\r\n        <div className=\"rcorners\" style={{ height: \"184px\" }} >\r\n          <Form form={form} name=\"basic\" initialValues={{ remember: true }} onFinish={(values)=>formSubmit(values)} >\r\n            <Form.Item name=\"name\" rules={[{ required: true, message: 'Please input your username!' }]} >\r\n              <Input\r\n                prefix={<UserOutlined className=\"site-form-item-icon\" />} placeholder=\"Username\"\r\n                style={{ width: '100%', borderRadius: '6px'}}\r\n              />  \r\n            </Form.Item>\r\n            <Form.Item name=\"password\" rules={[{ required: true, message: 'Please input your password!' }]} >\r\n              <Input\r\n                prefix={<LockOutlined className=\"site-form-item-icon\" />}\r\n                type=\"password\"\r\n                placeholder=\"Password\"\r\n                style={{ width: '100%', borderRadius: '6px'}}\r\n              />\r\n            </Form.Item>\r\n            <Form.Item >\r\n              <Button type=\"primary\" htmlType=\"submit\"\r\n                style={{ width: '100%', borderRadius: '6px', backgroundColor: '#F1C40F', border: 'none', fontSize: '16px', }}\r\n              >\r\n                Sign in\r\n              </Button>\r\n            </Form.Item>\r\n          </Form>\r\n          <Button type=\"link\" htmlType=\"button\"\r\n            style={{ width: '100%', borderRadius: '6px', border: 'none', fontSize: '16px', }}\r\n            onClick={()=>{history.push(\"/signup\")}}\r\n          >\r\n            Create a new user!\r\n          </Button>\r\n        </div>\r\n      </div>\r\n    );\r\n  } else {\r\n    history.push(\"/\");\r\n    return (null);\r\n  };\r\n};\r\n\r\n","D:\\Web\\CallUp system\\front-end\\src\\Home.js",["53","54","55","56","57","58"],"D:\\Web\\CallUp system\\front-end\\src\\SignUp.js",["59"],"import React, { useState } from 'react';\r\nimport { Button, Input, Form, message, Radio } from 'antd';\r\nimport { useHistory  } from 'react-router-dom';\r\nimport { GET, POST } from './Network';\r\nimport { UserOutlined, LockOutlined, PhoneOutlined, HomeOutlined, IdcardOutlined, EditOutlined } from '@ant-design/icons';\r\nimport doge from \"./doge.png\"\r\nimport './SignIn&Up.css'\r\n\r\nexport const SignUp = (props) => {\r\n  let history = useHistory();\r\n  const [idtype, setIDType] = useState(1);\r\n  const [form] = Form.useForm();\r\n\r\n  const formSubmit = (values) => {\r\n    console.log(values);\r\n    // 用户注册\r\n    const payload = {\r\n      'name': values.name,\r\n      'password': values.password,\r\n      'phone_num': values.phonenum,\r\n      'description': values.description,\r\n      'identity_type': idtype,\r\n      'identity_num': values.identitynum,\r\n      'city': values.city\r\n    };\r\n    console.log(payload);\r\n    POST('/signup', payload, (json) => {\r\n      message.success(\"Signup successfully, signin now!\")\r\n      history.push(\"/signin\");\r\n    }, (errMsg) => {\r\n      message.error(errMsg);\r\n      form.resetFields();\r\n    });\r\n  };\r\n  \r\n  if (!props.userVars.isLogIn) {\r\n    return (\r\n      <div\r\n        style={{\r\n          width: 350,\r\n          margin: 'auto',\r\n          textAlign: \"center\",\r\n        }}\r\n      >\r\n        <div style={{ textAlign: 'center', margin: \"40px 145px 20px 145px\" }} >\r\n          <img\r\n            style={{ height: '60px', }}\r\n            alt=\"logo\"\r\n            src={doge}\r\n          />\r\n        </div>\r\n        <h1 style={{ textAlign: 'center', }} >\r\n          召集令系统用户注册\r\n        </h1>\r\n        <div className=\"rcorners\" style={{ height: \"464px\" }}>\r\n          <Form form={form} name=\"basic\" initialValues={{ remember: true }} onFinish={(values)=>formSubmit(values)} >\r\n            <Form.Item name=\"name\" rules={[{ required: true, message: 'Please input your username!' }]} >\r\n              <Input\r\n                prefix={<UserOutlined className=\"site-form-item-icon\" />} placeholder=\"Username\"\r\n                style={{ width: '100%', borderRadius: '6px'}}\r\n              />\r\n            </Form.Item>\r\n            <Form.Item name=\"password\" rules={[{ required: true, message: 'Please input your password!' }]} >\r\n              <Input\r\n                prefix={<LockOutlined className=\"site-form-item-icon\" />}\r\n                type=\"password\"\r\n                placeholder=\"Password\"\r\n                style={{ width: '100%', borderRadius: '6px'}}\r\n              />\r\n            </Form.Item>\r\n            <Form.Item name=\"phonenum\" rules={[{ required: true, message: 'Please input your phone number!' }]} >\r\n              <Input\r\n                prefix={<PhoneOutlined className=\"site-form-item-icon\" />} placeholder=\"Phone number\"\r\n                style={{ width: '100%', borderRadius: '6px'}}\r\n              />\r\n            </Form.Item>\r\n            <Form.Item name=\"identitytype\" rules={[{ required: true, message: 'Please select your identity type!' }]} >\r\n              <Radio.Group onChange={(e)=>{setIDType(e.target.value)}} value={idtype} >\r\n                <Radio value={1} >身份证</Radio>\r\n                <Radio value={2} >护照</Radio>\r\n              </Radio.Group>\r\n            </Form.Item>\r\n            <Form.Item name=\"identitynum\" rules={[{ required: true, message: 'Please input your identity number!' }]} >\r\n              <Input\r\n                prefix={<IdcardOutlined className=\"site-form-item-icon\" />} placeholder=\"Identity number\"\r\n                style={{ width: '100%', borderRadius: '6px'}}\r\n              />\r\n            </Form.Item>\r\n            <Form.Item name=\"city\" rules={[{ required: true, message: 'Please input your city!' }]} >\r\n              <Input\r\n                prefix={<HomeOutlined className=\"site-form-item-icon\" />} placeholder=\"City\"\r\n                style={{ width: '100%', borderRadius: '6px'}}\r\n              />\r\n            </Form.Item>\r\n            <Form.Item name=\"description\" rules={[{ required: false, message: 'Introduce yourself!' }]} >\r\n              <Input\r\n                prefix={<EditOutlined className=\"site-form-item-icon\" />} placeholder=\"Introduce yourself\"\r\n                style={{ width: '100%', borderRadius: '6px'}}\r\n              />\r\n            </Form.Item>\r\n            <Form.Item >\r\n              <Button type=\"primary\" htmlType=\"submit\"\r\n                style={{ width: '100%', borderRadius: '6px', backgroundColor: '#F1C40F', border: 'none', fontSize: '16px', }}\r\n              >\r\n                Sign up\r\n              </Button>\r\n            </Form.Item>\r\n          </Form>\r\n        </div>\r\n      </div>\r\n    );\r\n  } else {\r\n    history.push(\"/\");\r\n    return (null);\r\n  };\r\n};\r\n","D:\\Web\\CallUp system\\front-end\\src\\ShowCard.js",["60","61","62","63","64","65","66","67","68","69"],"D:\\Web\\CallUp system\\front-end\\src\\Network.js",[],"D:\\Web\\CallUp system\\front-end\\src\\UserInfo.js",[],"D:\\Web\\CallUp system\\front-end\\src\\Manager.js",["70","71","72","73","74"],"D:\\Web\\CallUp system\\front-end\\src\\AddEvent.js",["75","76","77","78","79","80","81","82","83","84","85","86","87","88"],"import React, { useState } from 'react';\n\n\nimport { Modal, Layout, Button, Upload, message, Input, Select, DatePicker } from 'antd'; \n\nimport { Divider, InputNumber, Form } from 'antd';\n\nimport { moment } from 'moment';\n\nimport { PlusCircleOutlined } from '@ant-design/icons'\nimport { UploadOutlined, LoadingOutlined, PlusOutlined } from '@ant-design/icons'\n\nimport { Row, Col } from \"antd\";\n\n\nimport swain from \"./swain.jpg\";\n\n\nimport { GET, POST } from './Network';\n\n\nimport { useHistory } from 'react-router-dom';\nimport { UserOutlined, LockOutlined, PhoneOutlined, HomeOutlined, IdcardOutlined, EditOutlined } from '@ant-design/icons';\n\n\n\nDate.prototype.format = function(fmt) { \n  var o = { \n     \"M+\" : this.getMonth()+1,                 //月份 \n     \"d+\" : this.getDate(),                    //日 \n     \"h+\" : this.getHours(),                   //小时 \n     \"m+\" : this.getMinutes(),                 //分 \n     \"s+\" : this.getSeconds(),                 //秒 \n     \"q+\" : Math.floor((this.getMonth()+3)/3), //季度 \n     \"S\"  : this.getMilliseconds()             //毫秒 \n }; \n if(/(y+)/.test(fmt)) {\n         fmt=fmt.replace(RegExp.$1, (this.getFullYear()+\"\").substr(4 - RegExp.$1.length)); \n }\n  for(var k in o) {\n     if(new RegExp(\"(\"+ k +\")\").test(fmt)){\n          fmt = fmt.replace(RegExp.$1, (RegExp.$1.length==1) ? (o[k]) : ((\"00\"+ o[k]).substr((\"\"+ o[k]).length)));\n      }\n  }\n return fmt; \n}\n\n\n\nexport const AddEvent = (props) => {\n  \n  var d = new Date().format('yyyy-MM-dd'); \n  function disabledDate(current) {\n    return current.format('YYYY-MM-DD') < d;\n  }\n\n  const [form] = Form.useForm();\n\n  const callUpSubmit = (values) => {\n    console.log(values);\n    const payload = {\n      'username': props.userVars.user, \n      'title': values.title,\n      'type': values.type,\n      'endtime': values.endtime.format('YYYY-MM-DD'),\n      'description': values.description,\n      'population': `${values.population}`,\n      'img': 'no image',\n    };\n    console.log(payload);\n\n    POST('/addcallup', payload, (json) => {\n      message.success(\"Call up added successfully!\")\n    }, (errMsg) => {\n      message.error(errMsg);\n      form.resetFields();\n    });\n    handleOk();\n  };\n\n  // const callUpSubmit = (values) => {\n  //   //console.log(values);\n  //   //console.log(values.image.fileList[0]);\n  //   const payload = {\n  //     'head': 'head',\n  //     'title': values.title,\n  //     'file': values.image.fileList[0],\n  //   };\n  //   console.log(payload);\n\n  //   POST('/test', payload, (json) => {\n  //     message.success(\"tested successfully!\")\n  //   }, (errMsg) => {\n  //     message.error(errMsg);\n  //     form.resetFields();\n  //   });\n\n  //   handleOk();\n  // };\n\n\n\n  \n\n\n\n  \n  const [isModalVisible, setIsModalVisible] = useState(false);\n\n  const showModal = () => {\n    setIsModalVisible(true);\n  };\n\n  const handleOk = () => {\n    setIsModalVisible(false);\n  };\n\n  const handleCancel = () => {\n    setIsModalVisible(false);\n  };\n\n\n\n  const pppp = {\n    name: 'thisisafile',\n    action: '',\n    headers: {\n      authorization: 'authorization-text',\n    },\n    // onChange(info) {\n    //   if (info.file.status !== 'uploading') {\n    //     console.log(info.file, info.fileList);\n    //   }\n    //   if (info.file.status === 'done') {\n    //     message.success(`${info.file.name} file uploaded successfully`);\n    //   } else if (info.file.status === 'error') {\n    //     message.error(`${info.file.name} file upload failed.`);\n    //   }\n    // },\n\n    // customRequest(file) {\n    //   console.log(file);\n\n    //   POST('/rec', file, (json) => {\n    //     message.success(\"!!!!!!!!!!!!!!!!!!\")\n    //   }, (errMsg) => {\n    //     message.error(errMsg);\n    //   });\n    // }\n  };\n\n\n\n  return (\n    <>\n      <Button\n        onClick={showModal}\n        style={{\n          marginLeft: 860\n        }}\n      >\n        new\n        <Divider type='vertical' />\n        <PlusCircleOutlined />\n      </Button>\n\n\n      <Modal\n        title={<div style={{fontSize: 20}}>Add new card</div>}\n        centered\n        width={910}\n        visible={isModalVisible}\n        onOk={handleOk}\n        onCancel={handleCancel}\n        destroyOnClose={true}\n        footer={null}\n      >\n        <Form form={form} name=\"addCallUp\" initialValues={{ remember: true }} onFinish={(values)=>callUpSubmit(values)} preserve={false}>\n\n          <Layout\n            style={{\n              backgroundColor: 'white',\n              height: 300,\n              marginTop: 15,\n              marginLeft: 15\n            }}\n          >\n          \n            <Layout\n              style={{\n                backgroundColor: 'transparent',\n              }}\n            >\n              <Layout.Sider\n                width={550}\n                style={{\n                  backgroundColor: 'transparent'\n                }}\n              >\n                <Layout\n                  width={450}\n                  style={{\n                    backgroundColor: 'transparent'\n                  }}\n                >\n                  <Layout\n                    height={300}\n                    style={{\n                      backgroundColor: 'transparent'\n                    }}\n                  >\n                    <Layout.Sider\n                      width={380}\n                      style={{\n                        backgroundColor: 'transparent',\n                      }}\n                    >\n                      <Form.Item name=\"title\" rules={[{ required: true, message: 'Please input the title!' }]} >\n                        <Input\n                          placeholder=\"Title\"\n                          autoComplete=\"off\"\n                          style={{\n                            width: 330,\n                          }}\n                        />\n                      </Form.Item>\n                    </Layout.Sider>\n\n                    <Layout.Content>\n                      <Form.Item name=\"type\" rules={[{ required: true, message: 'Please choose the type!' }]}>\n                        <Select style={{ width: 120,}}>\n                          <Select.Option value='1'>技术交流</Select.Option>\n                          <Select.Option value='2'>学业探讨</Select.Option>\n                          <Select.Option value='3'>社会实践</Select.Option>\n                          <Select.Option value='4'>公益志愿</Select.Option>\n                          <Select.Option value='5'>娱乐游玩</Select.Option>\n                        </Select>\n                      </Form.Item>\n                    </Layout.Content>\n                  </Layout>\n\n                  <Layout\n                    height={300}\n                    style={{\n                      backgroundColor: 'transparent',\n                    }}\n                  >\n                    <Layout.Sider\n                      width={250}\n                      style={{\n                        backgroundColor: 'transparent',\n                      }}\n                    >\n                      <Form.Item name=\"endtime\" rules={[{ required: true, message: 'Please input the end date!' }]} >\n                        <DatePicker\n                          placeholder='Finish date'\n                          disabledDate={disabledDate}\n                          inputReadOnly\n                          style={{\n                            width: 200\n                          }}\n                        />\n                      </Form.Item>\n                    </Layout.Sider>\n\n                    <Layout.Content>\n                      <Form.Item name=\"population\" rules={[{ required: true, message: 'Please input the person number!' }]} >\n                        <InputNumber\n                          min={1}\n                          placeholder='Population'\n                          style={{\n                            width: 120\n                          }}\n                        />\n                      </Form.Item>\n                    </Layout.Content>\n                  </Layout>\n                  \n                  <Form.Item name=\"description\" rules={[{ required: true, message: 'Please input the description!' }]} >\n                    <Input.TextArea\n                      placeholder=\"Discription\"\n                      showCount\n                      maxLength={140}\n                      rows={4}\n                      autoComplete=\"off\"\n                      style={{\n                        width: 500,\n                      }}\n                    />\n                  </Form.Item>\n\n                </Layout>\n\n              </Layout.Sider>\n\n              <Layout.Content>\n              \n                <Form.Item name=\"image\" rules={[{ required: false, message: 'Please upload the event picture!' }]} >\n                  <Upload {...pppp}>\n                    <Button icon={<UploadOutlined />}\n                      style={{\n                        width: 240,\n                        height: 180\n                      }}\n                    >upload</Button>\n                  </Upload>\n                </Form.Item>\n              </Layout.Content>\n            </Layout>\n\n            \n            <Layout style={{backgroundColor: 'transparent'}}>\n              <Row gutter={16} justify=\"end\" style={{marginRight: 10}}>\n                <Col>\n                  <Button key=\"back\" onClick={handleCancel}>\n                    Cancel\n                  </Button>\n                </Col>\n\n                <Col>\n                  <Form.Item>\n                    <Button key=\"submit\" type=\"primary\" htmlType=\"submit\">\n                      Submit\n                    </Button>\n                  </Form.Item>\n                </Col>\n\n              </Row>\n              \n\n\n            </Layout>\n\n          </Layout>\n\n        </Form>\n\n      </Modal>\n    </>\n  )\n}\n  ",{"ruleId":"89","replacedBy":"90"},{"ruleId":"91","replacedBy":"92"},{"ruleId":"93","severity":1,"message":"94","line":1,"column":17,"nodeType":"95","messageId":"96","endLine":1,"endColumn":25},{"ruleId":"93","severity":1,"message":"97","line":9,"column":8,"nodeType":"95","messageId":"96","endLine":9,"endColumn":12},{"ruleId":"98","severity":1,"message":"99","line":33,"column":3,"nodeType":"95","endLine":33,"endColumn":12,"suggestions":"100"},{"ruleId":"101","severity":1,"message":"102","line":69,"column":51,"nodeType":"103","messageId":"104","endLine":69,"endColumn":53},{"ruleId":"101","severity":1,"message":"102","line":93,"column":44,"nodeType":"103","messageId":"104","endLine":93,"endColumn":46},{"ruleId":"101","severity":1,"message":"102","line":96,"column":44,"nodeType":"103","messageId":"104","endLine":96,"endColumn":46},{"ruleId":"101","severity":1,"message":"102","line":99,"column":44,"nodeType":"103","messageId":"104","endLine":99,"endColumn":46},{"ruleId":"93","severity":1,"message":"105","line":4,"column":10,"nodeType":"95","messageId":"96","endLine":4,"endColumn":13},{"ruleId":"93","severity":1,"message":"106","line":2,"column":51,"nodeType":"95","messageId":"96","endLine":2,"endColumn":57},{"ruleId":"93","severity":1,"message":"107","line":2,"column":65,"nodeType":"95","messageId":"96","endLine":2,"endColumn":72},{"ruleId":"108","severity":1,"message":"109","line":21,"column":1,"nodeType":"110","messageId":"104","endLine":40,"endColumn":2},{"ruleId":"101","severity":1,"message":"102","line":36,"column":57,"nodeType":"103","messageId":"104","endLine":36,"endColumn":59},{"ruleId":"101","severity":1,"message":"102","line":78,"column":35,"nodeType":"103","messageId":"104","endLine":78,"endColumn":37},{"ruleId":"101","severity":1,"message":"102","line":78,"column":62,"nodeType":"103","messageId":"104","endLine":78,"endColumn":64},{"ruleId":"101","severity":1,"message":"111","line":78,"column":117,"nodeType":"103","messageId":"104","endLine":78,"endColumn":119},{"ruleId":"101","severity":1,"message":"102","line":83,"column":24,"nodeType":"103","messageId":"104","endLine":83,"endColumn":26},{"ruleId":"101","severity":1,"message":"102","line":90,"column":31,"nodeType":"103","messageId":"104","endLine":90,"endColumn":33},{"ruleId":"98","severity":1,"message":"112","line":116,"column":24,"nodeType":"113","endLine":116,"endColumn":77,"suggestions":"114"},{"ruleId":"101","severity":1,"message":"102","line":12,"column":24,"nodeType":"103","messageId":"104","endLine":12,"endColumn":26},{"ruleId":"93","severity":1,"message":"115","line":28,"column":9,"nodeType":"95","messageId":"96","endLine":28,"endColumn":19},{"ruleId":"93","severity":1,"message":"116","line":85,"column":18,"nodeType":"95","messageId":"96","endLine":85,"endColumn":27},{"ruleId":"93","severity":1,"message":"117","line":86,"column":10,"nodeType":"95","messageId":"96","endLine":86,"endColumn":14},{"ruleId":"93","severity":1,"message":"118","line":87,"column":10,"nodeType":"95","messageId":"96","endLine":87,"endColumn":15},{"ruleId":"93","severity":1,"message":"119","line":8,"column":10,"nodeType":"95","messageId":"96","endLine":8,"endColumn":16},{"ruleId":"93","severity":1,"message":"120","line":11,"column":26,"nodeType":"95","messageId":"96","endLine":11,"endColumn":41},{"ruleId":"93","severity":1,"message":"121","line":11,"column":43,"nodeType":"95","messageId":"96","endLine":11,"endColumn":55},{"ruleId":"93","severity":1,"message":"122","line":16,"column":8,"nodeType":"95","messageId":"96","endLine":16,"endColumn":13},{"ruleId":"93","severity":1,"message":"105","line":19,"column":10,"nodeType":"95","messageId":"96","endLine":19,"endColumn":13},{"ruleId":"93","severity":1,"message":"123","line":22,"column":10,"nodeType":"95","messageId":"96","endLine":22,"endColumn":20},{"ruleId":"93","severity":1,"message":"124","line":23,"column":10,"nodeType":"95","messageId":"96","endLine":23,"endColumn":22},{"ruleId":"93","severity":1,"message":"125","line":23,"column":24,"nodeType":"95","messageId":"96","endLine":23,"endColumn":36},{"ruleId":"93","severity":1,"message":"126","line":23,"column":38,"nodeType":"95","messageId":"96","endLine":23,"endColumn":51},{"ruleId":"93","severity":1,"message":"127","line":23,"column":53,"nodeType":"95","messageId":"96","endLine":23,"endColumn":65},{"ruleId":"93","severity":1,"message":"128","line":23,"column":67,"nodeType":"95","messageId":"96","endLine":23,"endColumn":81},{"ruleId":"93","severity":1,"message":"129","line":23,"column":83,"nodeType":"95","messageId":"96","endLine":23,"endColumn":95},{"ruleId":"108","severity":1,"message":"109","line":27,"column":1,"nodeType":"110","messageId":"104","endLine":46,"endColumn":2},{"ruleId":"101","severity":1,"message":"102","line":42,"column":57,"nodeType":"103","messageId":"104","endLine":42,"endColumn":59},"no-native-reassign",["130"],"no-negated-in-lhs",["131"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'Form' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect contains a call to 'setPageHeight'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [] as a second argument to the useEffect Hook.",["132"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'GET' is defined but never used.","'Avatar' is defined but never used.","'Popover' is defined but never used.","no-extend-native","Date prototype is read only, properties should not be added.","AssignmentExpression","Expected '!==' and instead saw '!='.","React Hook useEffect has missing dependencies: 'callupList' and 'props.userVars.user'. Either include them or remove the dependency array.","ArrayExpression",["133"],"'formSubmit' is assigned a value but never used.","'setProfit' is assigned a value but never used.","'year' is assigned a value but never used.","'month' is assigned a value but never used.","'moment' is defined but never used.","'LoadingOutlined' is defined but never used.","'PlusOutlined' is defined but never used.","'swain' is defined but never used.","'useHistory' is defined but never used.","'UserOutlined' is defined but never used.","'LockOutlined' is defined but never used.","'PhoneOutlined' is defined but never used.","'HomeOutlined' is defined but never used.","'IdcardOutlined' is defined but never used.","'EditOutlined' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"134","fix":"135"},{"desc":"136","fix":"137"},"Add dependencies array: []",{"range":"138","text":"139"},"Update the dependencies array to be: [props.showtype, props.specificType, props.searchKey, props.userVars.user, callupList]",{"range":"140","text":"141"},[1236,1236],", []",[4262,4315],"[props.showtype, props.specificType, props.searchKey, props.userVars.user, callupList]"]